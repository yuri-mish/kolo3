[{"C:\\react\\kolo3\\app-name\\src\\index.js":"1","C:\\react\\kolo3\\app-name\\src\\polyfills.js":"2","C:\\react\\kolo3\\app-name\\src\\reportWebVitals.js":"3","C:\\react\\kolo3\\app-name\\src\\App.js":"4","C:\\react\\kolo3\\app-name\\src\\Content.js":"5","C:\\react\\kolo3\\app-name\\src\\UnauthenticatedContent.js":"6","C:\\react\\kolo3\\app-name\\src\\contexts\\navigation.js":"7","C:\\react\\kolo3\\app-name\\src\\contexts\\auth.js":"8","C:\\react\\kolo3\\app-name\\src\\utils\\media-query.js":"9","C:\\react\\kolo3\\app-name\\src\\app-info.js":"10","C:\\react\\kolo3\\app-name\\src\\app-routes.js":"11","C:\\react\\kolo3\\app-name\\src\\api\\auth.js":"12","C:\\react\\kolo3\\app-name\\src\\layouts\\index.js":"13","C:\\react\\kolo3\\app-name\\src\\components\\index.js":"14","C:\\react\\kolo3\\app-name\\src\\utils\\default-user.js":"15","C:\\react\\kolo3\\app-name\\src\\pages\\index.js":"16","C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js":"17","C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js":"18","C:\\react\\kolo3\\app-name\\src\\layouts\\single-card\\single-card.js":"19","C:\\react\\kolo3\\app-name\\src\\components\\footer\\footer.js":"20","C:\\react\\kolo3\\app-name\\src\\components\\reset-password-form\\reset-password-form.js":"21","C:\\react\\kolo3\\app-name\\src\\components\\login-form\\login-form.js":"22","C:\\react\\kolo3\\app-name\\src\\components\\header\\header.js":"23","C:\\react\\kolo3\\app-name\\src\\components\\side-navigation-menu\\side-navigation-menu.js":"24","C:\\react\\kolo3\\app-name\\src\\components\\change-password-form\\change-password-form.js":"25","C:\\react\\kolo3\\app-name\\src\\components\\create-account-form\\create-account-form.js":"26","C:\\react\\kolo3\\app-name\\src\\pages\\home\\home.js":"27","C:\\react\\kolo3\\app-name\\src\\pages\\profile\\profile.js":"28","C:\\react\\kolo3\\app-name\\src\\pages\\tasks\\tasks.js":"29","C:\\react\\kolo3\\app-name\\src\\utils\\patches.js":"30","C:\\react\\kolo3\\app-name\\src\\app-navigation.js":"31","C:\\react\\kolo3\\app-name\\src\\components\\user-panel\\user-panel.js":"32","C:\\react\\kolo3\\app-name\\src\\pages\\orders\\order.jsx":"33","C:\\react\\kolo3\\app-name\\src\\pages\\orders\\orders.jsx":"34","C:\\react\\kolo3\\app-name\\src\\utils\\filtfunc.js":"35","C:\\react\\kolo3\\app-name\\src\\constants.jsx":"36","C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsNoms.jsx":"37","C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsPartners.jsx":"38","C:\\react\\kolo3\\app-name\\src\\pages\\partner.js":"39"},{"size":522,"mtime":1608651477646,"results":"40","hashOfConfig":"41"},{"size":70,"mtime":1608651477623,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1608651424074,"results":"43","hashOfConfig":"41"},{"size":1115,"mtime":1608811284562,"results":"44","hashOfConfig":"41"},{"size":860,"mtime":1608811976516,"results":"45","hashOfConfig":"41"},{"size":1136,"mtime":1608811119013,"results":"46","hashOfConfig":"41"},{"size":805,"mtime":1608651477610,"results":"47","hashOfConfig":"41"},{"size":966,"mtime":1608821618694,"results":"48","hashOfConfig":"41"},{"size":1518,"mtime":1608651477629,"results":"49","hashOfConfig":"41"},{"size":71,"mtime":1608811910913,"results":"50","hashOfConfig":"41"},{"size":642,"mtime":1609930024565,"results":"51","hashOfConfig":"41"},{"size":2499,"mtime":1608821647675,"results":"52","hashOfConfig":"41"},{"size":230,"mtime":1608810364853,"results":"53","hashOfConfig":"41"},{"size":459,"mtime":1608810942831,"results":"54","hashOfConfig":"41"},{"size":177,"mtime":1608809852459,"results":"55","hashOfConfig":"41"},{"size":294,"mtime":1609930078102,"results":"56","hashOfConfig":"41"},{"size":3609,"mtime":1608810331590,"results":"57","hashOfConfig":"41"},{"size":4061,"mtime":1608810358003,"results":"58","hashOfConfig":"41"},{"size":501,"mtime":1608810269828,"results":"59","hashOfConfig":"41"},{"size":148,"mtime":1608810890785,"results":"60","hashOfConfig":"41"},{"size":2325,"mtime":1608810737492,"results":"61","hashOfConfig":"41"},{"size":3017,"mtime":1608810808076,"results":"62","hashOfConfig":"41"},{"size":1269,"mtime":1608810844722,"results":"63","hashOfConfig":"41"},{"size":2209,"mtime":1608810709923,"results":"64","hashOfConfig":"41"},{"size":2526,"mtime":1608810956195,"results":"65","hashOfConfig":"41"},{"size":3312,"mtime":1608810926867,"results":"66","hashOfConfig":"41"},{"size":12538,"mtime":1608810217620,"results":"67","hashOfConfig":"41"},{"size":1548,"mtime":1608810159634,"results":"68","hashOfConfig":"41"},{"size":2467,"mtime":1608809929873,"results":"69","hashOfConfig":"41"},{"size":445,"mtime":1608651477629,"results":"70","hashOfConfig":"41"},{"size":379,"mtime":1608711305366,"results":"71","hashOfConfig":"41"},{"size":1721,"mtime":1608810657599,"results":"72","hashOfConfig":"41"},{"size":18499,"mtime":1610100893408,"results":"73","hashOfConfig":"41"},{"size":10511,"mtime":1610103508620,"results":"74","hashOfConfig":"41"},{"size":2996,"mtime":1609841868018,"results":"75","hashOfConfig":"41"},{"size":48,"mtime":1609841525990,"results":"76","hashOfConfig":"41"},{"size":1629,"mtime":1609929507578,"results":"77","hashOfConfig":"41"},{"size":4649,"mtime":1610104640570,"results":"78","hashOfConfig":"41"},{"size":1754,"mtime":1610094577892,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1cmkse7",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},"C:\\react\\kolo3\\app-name\\src\\index.js",[],["162","163"],"C:\\react\\kolo3\\app-name\\src\\polyfills.js",[],"C:\\react\\kolo3\\app-name\\src\\reportWebVitals.js",[],"C:\\react\\kolo3\\app-name\\src\\App.js",[],"C:\\react\\kolo3\\app-name\\src\\Content.js",[],"C:\\react\\kolo3\\app-name\\src\\UnauthenticatedContent.js",[],"C:\\react\\kolo3\\app-name\\src\\contexts\\navigation.js",[],"C:\\react\\kolo3\\app-name\\src\\contexts\\auth.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\media-query.js",[],"C:\\react\\kolo3\\app-name\\src\\app-info.js",[],"C:\\react\\kolo3\\app-name\\src\\app-routes.js",[],"C:\\react\\kolo3\\app-name\\src\\api\\auth.js",["164","165"],"import defaultUser from '../utils/default-user';\n\nconst getAuth = async (user,pass) => {\n  const auth =  await fetch(\"http://localhost:4000/\", {\n    method: \"POST\",\n    credentials:'include',\n    //credentials: 'same-origin',\n    body: JSON.stringify({\n      query: `{auth (name:\"${user}\",pass:\"${pass}\") }`,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n//      data.data.auth.branch = data.data.branch\n\n       return data.data.auth\n    });\n\n    return auth\n};\n\nexport const logout = async (user,pass) => {\n  return await fetch(\"http://localhost:4000/\", {\n    method: \"POST\",\n    credentials:'include',\n    //credentials: 'same-origin',\n    body: JSON.stringify({\n      query: `{logout\n              }`,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n       return data.data.logout\n    });\n};\n\n\nexport async function signIn(email, password) {\n  try {\n    var result = await getAuth(email,password)\n    // Send request\n    //console.log(result, email, password);\n\n    return {\n      isOk: result.ok,\n      message: result.ok ? '':'Помилка входу',\n      data: {\n              email: email,\n              avatarUrl: 'https://otk.in.ua/wp-content/uploads/2020/07/logo.svg',\n}\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Authentication failed\"\n    };\n  }\n}\n\nexport async function getUser() {\n  try {\n    // Send request\n\n    return {\n      isOk: false,\n\n      //      isOk: true,\n//      data: defaultUser\n    };\n  }\n  catch {\n    return {\n      isOk: false\n    };\n  }\n}\n\nexport async function createAccount(email, password) {\n  try {\n    // Send request\n    console.log(email, password);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to create account\"\n    };\n  }\n}\n\nexport async function changePassword(email, recoveryCode) {\n  try {\n    // Send request\n    console.log(email, recoveryCode);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to change password\"\n    }\n  }\n}\n\nexport async function resetPassword(email) {\n  try {\n    // Send request\n    console.log(email);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to reset password\"\n    };\n  }\n}\n","C:\\react\\kolo3\\app-name\\src\\layouts\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\default-user.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\single-card\\single-card.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\footer\\footer.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\reset-password-form\\reset-password-form.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\login-form\\login-form.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\header\\header.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\side-navigation-menu\\side-navigation-menu.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\change-password-form\\change-password-form.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\create-account-form\\create-account-form.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\home\\home.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\profile\\profile.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\tasks\\tasks.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\patches.js",[],"C:\\react\\kolo3\\app-name\\src\\app-navigation.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\user-panel\\user-panel.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\orders\\order.jsx",["166","167","168","169","170","171","172","173"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { TextBox, DateBox, Menu, Popup } from \"devextreme-react\";\r\nimport Toolbar, { Item } from \"devextreme-react/toolbar\";\r\nimport { locale } from \"devextreme/localization\";\r\nimport moment from \"moment\";\r\n//import {lodash as _ } from \"lodash\"\r\n//import Lookup from \"devextreme-react/lookup\";\r\n//import { RemoteOperations } from \"devextreme-react/data-grid\";\r\nimport { DropDownBox } from \"devextreme-react/drop-down-box\";\r\nimport DataGrid, {\r\n  Selection,\r\n  Paging,\r\n  FilterRow,\r\n  Scrolling,\r\n  Column,\r\n  Editing,\r\n  Lookup,\r\n  Texts,\r\n} from \"devextreme-react/data-grid\";\r\nimport { uuid } from 'uuidv4';\r\n\r\nimport { partnerDataSource , PartnerBox} from \"../../db/ds/dsPartners\";\r\nimport { nomsDataSource } from \"../../db/ds/dsNoms\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport  notify  from 'devextreme/ui/notify';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ChartTitleSubtitle } from \"devextreme-react/chart\";\r\nimport { convertToText } from \"../../utils/filtfunc\";\r\nimport { Partner } from \"../partner\";\r\n\r\nvar _ = require('lodash');\r\n\r\nexport const Order = (props) => {\r\n  const history = useHistory();\r\n\r\n  var rowData = {};\r\n\r\n  let { id } = useParams();\r\n\r\n  const OrderSchema = {\r\n    date: moment(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n    number_doc: \"\",\r\n    class_name:\"doc.buyers_order\",\r\n    partner: { ref: \"\", name: \"\" },\r\n    services: [{ nom: { ref: \"\", name: \"\" }, price: 0 }],\r\n    doc_amount: 0,\r\n    vat_included:true,\r\n    doc_currency:'',\r\n  };\r\n\r\n  const [data, setData] = useState(OrderSchema);\r\n\r\n  const [prices, setPrices] = useState();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const load = () => {\r\n    return fetch(\"http://localhost:4000/\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        query: `{buyers_orders(ref:\"${id}\",limit:1) {\r\n                    _id\r\n                    doc_amount\r\n                    vat_included\r\n                    number_doc\r\n                    date\r\n                    partner{ref name}\r\n                    organization{ref name}\r\n                    ClientPerson\r\n                    ClientPersonPhone\r\n                    responsible {ref name}\r\n                    note\r\n                    services {\r\n                      nom {\r\n                        _id\r\n                        ref\r\n                        name\r\n                        name_full\r\n                      }\r\n                      row content price quantity amount discount_percent gos_code vin_code vat_rate vat_amount\r\n                    }\r\n                  }\r\n                }`,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //              mode:\"no-cors\" ,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.data.buyers_orders && data.data.buyers_orders.length > 0){\r\n          setData(data.data.buyers_orders[0]);\r\n          loadPrices(data.data.buyers_orders[0].date)\r\n        }\r\n        else {\r\n          loadPrices()\r\n        }\r\n        // return ()\r\n      });\r\n  };\r\n\r\n  const loadPrices = async (date)=>{\r\n     \r\n    if (!date) date = moment(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\")\r\n    const datePatam= `(date:\"${date}\")`\r\n    return fetch(\"http://localhost:4000/\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        query: `{prices ${datePatam} { nom price currency vat_included }}`,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //              mode:\"no-cors\" ,\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('=prices response:',data);\r\n        var pr = []\r\n        if (data.data.prices && data.data.prices.length > 0){\r\n          pr = data.data.prices\r\n          const vat_included = pr[0].vat_included === 'true'\r\n          const doc_currency = pr[0].currency\r\n          setData((prevState) => ({\r\n            ...prevState,\r\n            vat_included:vat_included,\r\n            doc_currency:doc_currency\r\n          }));\r\n        }\r\n          setPrices(pr);\r\n          return pr\r\n      });\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    load();\r\n    loadPrices();\r\n    return () => {};\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onValueChanged = (param) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      date: moment(param.value).format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n    }));\r\n  };\r\n\r\n  locale(\"uk\"); //!!!!+++\r\n  console.log(\"=\" + data.date);\r\n\r\n  const onQuantityChanged = (r) => {\r\n    calcrRow(rowData)\r\n\r\n  };\r\n\r\n  const calcrRow = (currentRowData) =>{\r\n    var doc_amount=0\r\n    currentRowData.amount = currentRowData.price * currentRowData.quantity;\r\n    if (isNaN(currentRowData.amount)) currentRowData.amount = 0\r\n    if (currentRowData.vat_rate===\"НДС20\") currentRowData.vat_amount = Math.round(currentRowData.amount/6, -2)\r\n    data.services.forEach(r=>{doc_amount+= (r.row===currentRowData.row)?currentRowData.amount:r.amount})\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      doc_amount:doc_amount,\r\n      services: prevState.services.map((row) => {\r\n        if (row.row === currentRowData.row) return currentRowData;\r\n        else return row;\r\n      }),\r\n    \r\n    }));\r\n    \r\n  }\r\n  const onchangeNom = async (newData, value, currentRowData)=>{\r\n    console.log('=newData=',newData,'=value=',value,'=currentRowDatar=',currentRowData) \r\n    var pricerow = prices.find((r)=>{return r.nom === value})\r\n    currentRowData.price = pricerow?pricerow.price:0\r\n    var res = await nomsDataSource.byKey(value)\r\n    if (res) {\r\n      currentRowData.content = res.name_full\r\n      if (res.vat_rate) currentRowData.vat_rate = res.vat_rate\r\n    }\r\n    currentRowData.nom.ref = value\r\n\r\n    calcrRow(currentRowData)\r\n    \r\n    console.log('price=',currentRowData.price)\r\n  }\r\n\r\n  const onchangeDate = async (param)=>{\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      date: moment(param.value).format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n    }));\r\n    const newprice = await loadPrices(moment(param.value).format(\"YYYY-MM-DDTHH:mm:ss\"))\r\n    data.services.forEach((row)=>{\r\n      var pricerow = newprice.find((priceRow)=>{return priceRow.nom === row.nom.ref})\r\n      row.price = pricerow?pricerow.price:0\r\n      calcrRow(row)\r\n    })\r\n  }\r\n  const addButtonOptions = {\r\n    icon: \"plus\",\r\n    onClick: () => {\r\n      var st = data.services.slice();\r\n      console.log(\"New row:\", st);\r\n      st.push({\r\n        row: data.services.length + 1,\r\n        nom: { ref: undefined, name: \"<послуга>\" },\r\n      });\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        services: st,\r\n      }));\r\n    },\r\n  };\r\n\r\n  const deleteButtonOptions = {\r\n    icon: \"minus\",\r\n    disabled: false,\r\n\r\n    onClick: () => {\r\n      var st = data.services.filter((row) => row.row !== rowData?.row);\r\n      deleteButtonOptions.disabled = st.length === 0;\r\n      //      console.log('delete row:',st)\r\n\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        services: st,\r\n      }));\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const showError = (message)=>{\r\n                    notify({message:message,position: { at: 'center'}}, \"error\", 5000);\r\n  }\r\n\r\nconst cellTemplate = (r)=>{\r\n  return (\r\n    \r\n  <DropDownBox\r\n  width=\"250px\"\r\n  value={r.data.value}\r\n  valueExpr=\"ref\"\r\n  deferRendering={false}\r\n  displayExpr=\"name\"\r\n  //              displayExpr={this.gridBox_displayExpr}\r\n  placeholder=\"послуга ...\"\r\n  showClearButton={false}\r\n  dataSource={nomsDataSource}\r\n  dropDownOptions={{width:\"888px\"}}\r\n  //  onValueChanged={(e) => {\r\n\r\n  //    console.log(e);\r\n  //  }}\r\n  //             contentRender={dataGridRender}\r\n>\r\n\r\n  <Menu\r\n    onItemClick={(e) => {\r\n      console.log('menu item:',e);\r\n    }}\r\n    dataSource={[\r\n      {\r\n        text: \"Вибрати\",\r\n      },\r\n      // {\r\n      //   text: \"Додати\",\r\n      // },\r\n      {\r\n        text: \"Закрити\",\r\n      },\r\n      {\r\n        text: \"Інше\",\r\n        items: [\r\n          {\r\n            text: \" інше 1\",\r\n          },\r\n          {\r\n            text: \"штше 2\",\r\n          },\r\n        ],\r\n      },\r\n    ]}></Menu>\r\n\r\n  <DataGrid\r\n    remoteOperations={true}\r\n    dataSource={nomsDataSource}\r\n\r\n    hoverStateEnabled={true}\r\n    \r\n    //selectedRowKeys={this.state.gridBoxValue}\r\n     onSelectionChanged={(e) => {\r\n    //   setData((prevState) => ({\r\n    //     ...prevState,\r\n    //     partner: {\r\n    //       ref: e.selectedRowsData[0].ref,\r\n    //       name: e.selectedRowsData[0].name,\r\n    //     },\r\n    //   }));\r\n    r.data.setValue(e.selectedRowsData[0].ref,e.selectedRowsData[0].name)\r\n    //r.data.row.content = e.selectedRowsData[0].name_full\r\n    console.log('===onSelectionChanged:',e);\r\n    }}\r\n    \r\n    height=\"90%\">\r\n    \r\n    <Selection mode=\"single\" />\r\n    <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\" />\r\n    <Paging enabled={true} pageSize={200} />\r\n    <FilterRow visible={true} />\r\n    <Column dataField=\"ref\" visible={false} />\r\n    <Column dataField=\"name\" caption=\"Назва\" width=\"150px\"/>\r\n    <Column dataField=\"name_full\" caption=\"Повна назва\"/> \r\n    \r\n  </DataGrid>\r\n  \r\n</DropDownBox>\r\n\r\n  )\r\n}\r\n\r\nconst changeReq = (e)=>{\r\n  setData((prevState) => ({\r\n      ...prevState,\r\n      [e.element.id]:e.event.target.value\r\n    \r\n    }));\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Menu\r\n        onItemClick={async e => {\r\n          if (e.itemData.id === \"ok\") {\r\n            var doctosave = _.cloneDeep(data)\r\n            if (id===\"new\"){\r\n              doctosave._id='doc.buyers_order|'+uuid()\r\n              doctosave.class_name=\"doc.buyers_order\"\r\n            }\r\n            doctosave.partner=doctosave.partner.ref  \r\n            if (doctosave.organization) doctosave.organization=doctosave.organization.ref  \r\n            if (doctosave.responsible) delete doctosave.responsible  \r\n\r\n            \r\n            doctosave.services.forEach(r=>{\r\n              return r.nom = r.nom.ref\r\n              })\r\n            const q = JSON.stringify({\r\n              query: `mutation{setBuyersOrder(input:${convertToText(doctosave)}) {\r\n                    _id\r\n                      }}`,\r\n            });\r\n\r\n            const response = await fetch(\"http://localhost:4000/\", {\r\n              method: \"POST\",\r\n              credentials: \"include\",\r\n              body: q,\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            });\r\n            console.log(response);\r\n            const datar = await response.json();\r\n            console.log(datar);\r\n            if (datar.errors) {\r\n              datar.errors.forEach(err => {\r\n                showError(\"Помилка запису: \" + err.message);\r\n              });\r\n            }\r\n            else { history.goBack(); }\r\n          }\r\n          if (e.itemData.id === \"close\") {\r\n              history.goBack();\r\n          }\r\n          \r\n        }}\r\n        dataSource={[\r\n          {\r\n            id: \"ok\",\r\n            text: \"Закрити і зберегти\",\r\n          },\r\n          { id:\"close\",\r\n            text: \"Закрити\",\r\n          },\r\n          { \r\n            text: \"Зберегти\", disabled:true\r\n          },\r\n          // {\r\n          //   text: \"Інше\",\r\n          //   items: [\r\n          //     {\r\n          //       text: \" інше 1\",\r\n          //     },\r\n          //     {\r\n          //       text: \"штше 2\",\r\n          //     },\r\n          //   ],\r\n          // },\r\n        ]}></Menu>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ display: \"flex\", paddingRight: \"1rem\" }}>\r\n          <TextBox disabled={true} value=\"Номер\"></TextBox>\r\n          <TextBox readOnly={true} value={data.number_doc} placeholder=\"номер документа\" />\r\n        </div>\r\n        <TextBox value=\"Дата\"></TextBox>\r\n        <DateBox\r\n          id=\"date\"\r\n          type=\"datetime\"\r\n          //        min={this.minDate}\r\n          //                max={this.now}\r\n          //defaultValue ={Date.now()}\r\n\r\n          value={\r\n            data.date\r\n            //                        data.date?Date.parse(data.date):Date.now()\r\n          }\r\n          displayFormat={\"dd-MM-yyyy HH:mm:ss\"}\r\n          useMaskBehavior={true}\r\n          onValueChanged={onchangeDate}\r\n          //                disabledDates={this.getDisabledDates}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", paddingTop: \"1rem\" }}>\r\n        <TextBox value=\"Контрагент\"></TextBox>\r\n        <PartnerBox value={data.partner?.ref} onChange={(e) => {\r\n              setData((prevState) => ({\r\n                ...prevState,\r\n                partner: {\r\n                  ref: e.selectedRowsData[0].ref,\r\n                  name: e.selectedRowsData[0].name,\r\n                },\r\n              }));\r\n            }}/>\r\n      </div> \r\n      <div style={{ display: \"flex\" }}>\r\n          <TextBox value=\"Особа\"></TextBox>\r\n          <TextBox  width= \"80%\" id=\"ClientPerson\" value={data.ClientPerson} placeholder=\"контактана особа\" onChange={changeReq}/>\r\n          <div style={{ display: \"flex\", paddingRight: \"1rem\" }}>\r\n          <TextBox value=\"Телефон\"></TextBox>\r\n          <TextBox id=\"ClientPersonPhone\" value={data.ClientPersonPhone} placeholder=\"контактаний телефон\" onChange={changeReq}/>\r\n        </div>\r\n        </div> \r\n\r\n      <div style={{ paddingTop: \"1rem\" }}>\r\n        <Toolbar>\r\n          <Item\r\n            location=\"before\"\r\n            locateInMenu=\"auto\"\r\n            widget=\"dxButton\"\r\n            options={addButtonOptions}\r\n          />\r\n\r\n          <Item text=\"Add\" locateInMenu=\"always\" />\r\n        </Toolbar>\r\n        <DataGrid\r\n          noDataText=\"Список порожній\"\r\n          remoteOperations={false}\r\n          rowAlternationEnabled={true}\r\n          showBorders={true}\r\n//          dataSource={data.services.slice()}\r\n          dataSource={data.services.map((r)=>{return r})}\r\n         \r\n          hoverStateEnabled={true}\r\n          //activeStateEnabled = {true}\r\n          //selectedRowKeys={this.state.gridBoxValue}\r\n          onValueChanged={(e) => {\r\n            console.log(\"=999=\", e);\r\n          }}\r\n          onSelectionChanged={(e) => {\r\n            console.log(\"=9=\", e);\r\n            setData((prevState) => ({\r\n              ...prevState,\r\n              partner: {\r\n                ref: e.selectedRowsData[0].ref,\r\n                name: e.selectedRowsData[0].name,\r\n              },\r\n            }));\r\n          }}\r\n          selectTextOnEditStart={true}\r\n          onInitNewRow={(e) => {\r\n            var st = data.services.slice();\r\n            console.log(\"New row:\", st);\r\n            st.push({\r\n              row: data.services.length + 1,\r\n              nom: { ref: undefined, name: \"<послуга>\" },\r\n            });\r\n            setData((prevState) => ({\r\n              ...prevState,\r\n              services: st,\r\n            }));\r\n          }}\r\n          onEditorPrepared={(e) => {\r\n            rowData = e.row.data;\r\n            if (e.dataField === \"quantity\") {\r\n              e.editorElement.onchange = onQuantityChanged;\r\n              console.log(e);\r\n            }\r\n          }}\r\n          onRowRemoved={(e) => {\r\n            console.log(\"Row remove\", e); //+++\r\n\r\n            var st = data.services.filter((row) => row.row !== e.data.row);\r\n            var i = 1;\r\n            st.forEach((r) => {\r\n              r.row = i++;\r\n            });\r\n            setData((prevState) => ({\r\n              ...prevState,\r\n              services: st,\r\n            }));\r\n          }}>\r\n          <Editing\r\n            mode=\"cell\"\r\n            allowUpdating={true}\r\n            //allowAdding={true}\r\n            allowDeleting={true}\r\n            useIcons={true}>\r\n            <Texts confirmDeleteMessage=\"Вилучити?\" />\r\n          </Editing>\r\n\r\n          <Column\r\n            dataField=\"nom.ref\"\r\n            caption=\"Номенклатура\"\r\n            calculateDisplayValue={(data) => {\r\n              //                console.log(data) ;\r\n              return data.nom?.name;\r\n            }}\r\n            setCellValue={onchangeNom}\r\n            editCellComponent={cellTemplate}\r\n            \r\n            >\r\n            {/* <Lookup\r\n              dataSource={nomsDataSource}\r\n              valueExpr=\"ref\"\r\n              displayExpr=\"name\"\r\n              minSearchLength={3}\r\n              searchTimeout={500}\r\n              > */}\r\n            \r\n              {/* <DataGrid\r\n            remoteOperations={true}\r\n            dataSource={nomsDataSource}\r\n            //      columns={[\"ref\", \"name\", \"edrpou\"]}\r\n            hoverStateEnabled={true}\r\n            //selectedRowKeys={this.state.gridBoxValue}\r\n            // onSelectionChanged={(e) => {\r\n            //   setData((prevState) => ({\r\n            //     ...prevState,\r\n            //     partner: {\r\n            //       ref: e.selectedRowsData[0].ref,\r\n            //       name: e.selectedRowsData[0].name,\r\n            //     },\r\n            //   }));\r\n            //   //console.log(e);\r\n            // }}\r\n            height=\"90%\">\r\n            \r\n            <Selection mode=\"single\" />\r\n            <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\" /> \r\n            <Paging enabled={true} pageSize={100} />\r\n            <FilterRow visible={true} />\r\n            <Column dataField=\"ref\" visible={false} />\r\n            <Column dataField=\"name\" caption=\"Назва\" />\r\n          </DataGrid> */}\r\n\r\n              {/* </Lookup> */}\r\n          </Column>\r\n          <Column dataField=\"price\" caption=\"Ціна\" allowEditing={false} />\r\n          <Column dataField=\"quantity\" caption=\"Кількість\" />\r\n          <Column dataField=\"discount_percent\" caption=\"%скидки\" allowEditing={false}/>\r\n          <Column dataField=\"amount\" caption=\"Сума\" allowEditing={false}/>\r\n        </DataGrid>\r\n      </div>\r\n      <div style={{ display: \"flex\", paddingRight: \"1rem\", width: \"800\" }}>\r\n      <TextBox  width= \"20%\" value=\"Коментар\"></TextBox>\r\n          <TextBox  width= \"80%\"  id=\"note\" value={data.note} placeholder=\"коментар\" onChange={changeReq}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\react\\kolo3\\app-name\\src\\pages\\orders\\orders.jsx",["174"],"C:\\react\\kolo3\\app-name\\src\\utils\\filtfunc.js",[],"C:\\react\\kolo3\\app-name\\src\\constants.jsx",[],"C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsNoms.jsx",[],"C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsPartners.jsx",["175","176"],"C:\\react\\kolo3\\app-name\\src\\pages\\partner.js",["177","178","179","180","181","182"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Popup } from 'devextreme-react';\r\nimport { useAuth } from \"../contexts/auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { partnerDataSource } from './../db/ds/dsPartners';\r\nimport { ButtonItem, ButtonOptions, Item, Label, SimpleItem } from \"devextreme-react/form\";\r\n\r\nexport const Partner = (props)=>{\r\n    \r\n//    const history = useHistory()  \r\n    let { id } = useParams();\r\n\r\n    \r\n    const setP = async (id)=>{\r\n      const partn = await partnerDataSource.byKey(id).then((data)=>{\r\n      setPartner(data)\r\n      return data \r\n      \r\n    })   \r\n    return partn\r\n    }\r\n\r\n    const [ partner, setPartner ] = useState();\r\n    \r\n     \r\n    useEffect(() => {\r\n      console.log('***')\r\n      setP(props._id);\r\n    return () => {};\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props._id]);\r\n\r\n  return (\r\n      <div>\r\n        \r\n        <Form\r\n            id=\"form\"\r\n            formData={partner}\r\n            //readOnly={readOnly}\r\n            showColonAfterLabel={true}\r\n            labelLocation={'left'}\r\n//            minColWidth={300}\r\n            colCount={2}\r\n            width={1000}\r\n          >\r\n            <Item dataField=\"edrpou\" editorType=\"dxNumberBox\" editorOptions={{ disabled: false }} ><Label text=\"Код ЄДРПОУ\"/></Item>\r\n            <ButtonItem horizontalAlignment=\"left\" buttonOptions = {{text: 'Знайти', type: 'success', useSubmitBehavior: true}}/> \r\n            <SimpleItem  dataField=\"name\"  editorOptions={{ disabled: false }}><Label text=\"Найменування\"/></SimpleItem> \r\n          </Form>\r\n\r\n          \r\n      </div>\r\n    \r\n    )\r\n\r\n\r\n}\r\n\r\n",{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":8,"nodeType":"189","messageId":"190","endLine":1,"endColumn":19},{"ruleId":"191","severity":1,"message":"192","line":83,"column":9,"nodeType":"193","messageId":"194","endLine":87,"endColumn":4},{"ruleId":"187","severity":1,"message":"195","line":4,"column":34,"nodeType":"189","messageId":"190","endLine":4,"endColumn":39},{"ruleId":"187","severity":1,"message":"196","line":19,"column":3,"nodeType":"189","messageId":"190","endLine":19,"endColumn":9},{"ruleId":"187","severity":1,"message":"197","line":24,"column":10,"nodeType":"189","messageId":"190","endLine":24,"endColumn":27},{"ruleId":"187","severity":1,"message":"198","line":29,"column":10,"nodeType":"189","messageId":"190","endLine":29,"endColumn":28},{"ruleId":"187","severity":1,"message":"199","line":31,"column":10,"nodeType":"189","messageId":"190","endLine":31,"endColumn":17},{"ruleId":"187","severity":1,"message":"200","line":56,"column":10,"nodeType":"189","messageId":"190","endLine":56,"endColumn":20},{"ruleId":"187","severity":1,"message":"201","line":56,"column":22,"nodeType":"189","messageId":"190","endLine":56,"endColumn":35},{"ruleId":"187","severity":1,"message":"202","line":152,"column":9,"nodeType":"189","messageId":"190","endLine":152,"endColumn":23},{"ruleId":"187","severity":1,"message":"203","line":218,"column":11,"nodeType":"189","messageId":"190","endLine":218,"endColumn":15},{"ruleId":"187","severity":1,"message":"204","line":6,"column":20,"nodeType":"189","messageId":"190","endLine":6,"endColumn":37},{"ruleId":"187","severity":1,"message":"205","line":8,"column":59,"nodeType":"189","messageId":"190","endLine":8,"endColumn":71},{"ruleId":"187","severity":1,"message":"206","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":16},{"ruleId":"187","severity":1,"message":"195","line":2,"column":24,"nodeType":"189","messageId":"190","endLine":2,"endColumn":29},{"ruleId":"187","severity":1,"message":"207","line":3,"column":10,"nodeType":"189","messageId":"190","endLine":3,"endColumn":17},{"ruleId":"187","severity":1,"message":"208","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":20},{"ruleId":"187","severity":1,"message":"209","line":7,"column":22,"nodeType":"189","messageId":"190","endLine":7,"endColumn":35},{"ruleId":"187","severity":1,"message":"210","line":12,"column":11,"nodeType":"189","messageId":"190","endLine":12,"endColumn":13},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'defaultUser' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","'Popup' is defined but never used.","'Lookup' is defined but never used.","'partnerDataSource' is defined but never used.","'ChartTitleSubtitle' is defined but never used.","'Partner' is defined but never used.","'dialogOpen' is assigned a value but never used.","'setDialogOpen' is assigned a value but never used.","'onValueChanged' is assigned a value but never used.","'user' is assigned a value but never used.","'DropDownBoxButton' is defined but never used.","'StateStoring' is defined but never used.","'Button' is defined but never used.","'useAuth' is defined but never used.","'useHistory' is defined but never used.","'ButtonOptions' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]