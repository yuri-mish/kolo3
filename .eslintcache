[{"C:\\react\\kolo3\\app-name\\src\\index.js":"1","C:\\react\\kolo3\\app-name\\src\\polyfills.js":"2","C:\\react\\kolo3\\app-name\\src\\reportWebVitals.js":"3","C:\\react\\kolo3\\app-name\\src\\App.js":"4","C:\\react\\kolo3\\app-name\\src\\Content.js":"5","C:\\react\\kolo3\\app-name\\src\\UnauthenticatedContent.js":"6","C:\\react\\kolo3\\app-name\\src\\contexts\\navigation.js":"7","C:\\react\\kolo3\\app-name\\src\\contexts\\auth.js":"8","C:\\react\\kolo3\\app-name\\src\\utils\\media-query.js":"9","C:\\react\\kolo3\\app-name\\src\\app-info.js":"10","C:\\react\\kolo3\\app-name\\src\\app-routes.js":"11","C:\\react\\kolo3\\app-name\\src\\api\\auth.js":"12","C:\\react\\kolo3\\app-name\\src\\layouts\\index.js":"13","C:\\react\\kolo3\\app-name\\src\\components\\index.js":"14","C:\\react\\kolo3\\app-name\\src\\utils\\default-user.js":"15","C:\\react\\kolo3\\app-name\\src\\pages\\index.js":"16","C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js":"17","C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js":"18","C:\\react\\kolo3\\app-name\\src\\layouts\\single-card\\single-card.js":"19","C:\\react\\kolo3\\app-name\\src\\components\\footer\\footer.js":"20","C:\\react\\kolo3\\app-name\\src\\components\\reset-password-form\\reset-password-form.js":"21","C:\\react\\kolo3\\app-name\\src\\components\\login-form\\login-form.js":"22","C:\\react\\kolo3\\app-name\\src\\components\\header\\header.js":"23","C:\\react\\kolo3\\app-name\\src\\components\\side-navigation-menu\\side-navigation-menu.js":"24","C:\\react\\kolo3\\app-name\\src\\components\\change-password-form\\change-password-form.js":"25","C:\\react\\kolo3\\app-name\\src\\components\\create-account-form\\create-account-form.js":"26","C:\\react\\kolo3\\app-name\\src\\pages\\home\\home.js":"27","C:\\react\\kolo3\\app-name\\src\\pages\\profile\\profile.js":"28","C:\\react\\kolo3\\app-name\\src\\pages\\tasks\\tasks.js":"29","C:\\react\\kolo3\\app-name\\src\\utils\\patches.js":"30","C:\\react\\kolo3\\app-name\\src\\app-navigation.js":"31","C:\\react\\kolo3\\app-name\\src\\components\\user-panel\\user-panel.js":"32","C:\\react\\kolo3\\app-name\\src\\pages\\orders\\order.jsx":"33","C:\\react\\kolo3\\app-name\\src\\pages\\orders\\orders.jsx":"34","C:\\react\\kolo3\\app-name\\src\\utils\\filtfunc.js":"35","C:\\react\\kolo3\\app-name\\src\\constants.jsx":"36","C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsNoms.jsx":"37","C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsPartners.jsx":"38","C:\\react\\kolo3\\app-name\\src\\pages\\partner.js":"39","C:\\react\\kolo3\\app-name\\src\\pages\\test\\test.js":"40","C:\\react\\kolo3\\app-name\\src\\components\\otk\\AutocompleteOTK.jsx":"41"},{"size":954,"mtime":1611646296966,"results":"42","hashOfConfig":"43"},{"size":70,"mtime":1608651477623,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1608651424074,"results":"45","hashOfConfig":"43"},{"size":1299,"mtime":1612171130680,"results":"46","hashOfConfig":"43"},{"size":860,"mtime":1608811976516,"results":"47","hashOfConfig":"43"},{"size":1136,"mtime":1608811119013,"results":"48","hashOfConfig":"43"},{"size":806,"mtime":1612251367359,"results":"49","hashOfConfig":"43"},{"size":966,"mtime":1608821618694,"results":"50","hashOfConfig":"43"},{"size":1518,"mtime":1608651477629,"results":"51","hashOfConfig":"43"},{"size":110,"mtime":1611054840249,"results":"52","hashOfConfig":"43"},{"size":741,"mtime":1612249115568,"results":"53","hashOfConfig":"43"},{"size":2564,"mtime":1610433623143,"results":"54","hashOfConfig":"43"},{"size":230,"mtime":1608810364853,"results":"55","hashOfConfig":"43"},{"size":459,"mtime":1608810942831,"results":"56","hashOfConfig":"43"},{"size":177,"mtime":1608809852459,"results":"57","hashOfConfig":"43"},{"size":335,"mtime":1612249046296,"results":"58","hashOfConfig":"43"},{"size":3609,"mtime":1608810331590,"results":"59","hashOfConfig":"43"},{"size":4061,"mtime":1608810358003,"results":"60","hashOfConfig":"43"},{"size":501,"mtime":1608810269828,"results":"61","hashOfConfig":"43"},{"size":148,"mtime":1608810890785,"results":"62","hashOfConfig":"43"},{"size":2325,"mtime":1608810737492,"results":"63","hashOfConfig":"43"},{"size":3242,"mtime":1611918112541,"results":"64","hashOfConfig":"43"},{"size":1269,"mtime":1608810844722,"results":"65","hashOfConfig":"43"},{"size":2365,"mtime":1612251795707,"results":"66","hashOfConfig":"43"},{"size":2526,"mtime":1608810956195,"results":"67","hashOfConfig":"43"},{"size":3312,"mtime":1608810926867,"results":"68","hashOfConfig":"43"},{"size":12813,"mtime":1611931839430,"results":"69","hashOfConfig":"43"},{"size":1548,"mtime":1608810159634,"results":"70","hashOfConfig":"43"},{"size":2467,"mtime":1608809929873,"results":"71","hashOfConfig":"43"},{"size":445,"mtime":1608651477629,"results":"72","hashOfConfig":"43"},{"size":511,"mtime":1612249768293,"results":"73","hashOfConfig":"43"},{"size":1753,"mtime":1611839593778,"results":"74","hashOfConfig":"43"},{"size":23280,"mtime":1612345926125,"results":"75","hashOfConfig":"43"},{"size":13554,"mtime":1612194173544,"results":"76","hashOfConfig":"43"},{"size":3353,"mtime":1611830930218,"results":"77","hashOfConfig":"43"},{"size":923,"mtime":1612178108514,"results":"78","hashOfConfig":"43"},{"size":1757,"mtime":1611829832488,"results":"79","hashOfConfig":"43"},{"size":6879,"mtime":1612178171177,"results":"80","hashOfConfig":"43"},{"size":10802,"mtime":1611931977943,"results":"81","hashOfConfig":"43"},{"size":3332,"mtime":1612279351005,"results":"82","hashOfConfig":"43"},{"size":3981,"mtime":1612346379605,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1cmkse7",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\kolo3\\app-name\\src\\index.js",[],["171","172"],"C:\\react\\kolo3\\app-name\\src\\polyfills.js",[],"C:\\react\\kolo3\\app-name\\src\\reportWebVitals.js",[],"C:\\react\\kolo3\\app-name\\src\\App.js",[],"C:\\react\\kolo3\\app-name\\src\\Content.js",[],"C:\\react\\kolo3\\app-name\\src\\UnauthenticatedContent.js",[],"C:\\react\\kolo3\\app-name\\src\\contexts\\navigation.js",[],"C:\\react\\kolo3\\app-name\\src\\contexts\\auth.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\media-query.js",[],"C:\\react\\kolo3\\app-name\\src\\app-info.js",[],"C:\\react\\kolo3\\app-name\\src\\app-routes.js",[],"C:\\react\\kolo3\\app-name\\src\\api\\auth.js",["173","174"],"import defaultUser from '../utils/default-user';\nimport { API_HOST } from './../constants';\n\nconst getAuth = async (user,pass) => {\n  const auth =  await  fetch(API_HOST, {\n    method: \"POST\",\n    credentials:'include', \n    //mode:'cors',\n      body: JSON.stringify({\n      query: `{auth (name:\"${user}\",pass:\"${pass}\") }`, \n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    })\n    .then((response) => {\n      console.log(response)\n      return response.json();\n    })\n    .then((data) => {\n//      data.data.auth.branch = data.data.branch\n\n       return data.data.auth\n    }).catch((e)=>console.log('Ooops',e));\n\n    return auth\n};\n\nexport const logout = async (user,pass) => {\n  return await fetch(API_HOST, {\n    method: \"POST\",\n    credentials:'include', \n    //credentials: 'same-origin',\n    body: JSON.stringify({\n      query: `{logout\n              }`,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n       return data.data.logout\n    });\n};\n\n\nexport async function signIn(email, password) {\n  try {\n    var result = await getAuth(email,password)\n    // Send request\n    //console.log(result, email, password);\n\n    return {\n      isOk: result.ok,\n      message: result.ok ? '':'Помилка входу',\n      data: {\n              email: email,\n              avatarUrl: 'https://otk.in.ua/wp-content/uploads/2020/07/logo.svg',\n}\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Authentication failed\"\n    };\n  }\n}\n\nexport async function getUser() {\n  try {\n    // Send request\n\n    return {\n      isOk: false,\n\n      //      isOk: true,\n//      data: defaultUser\n    };\n  }\n  catch {\n    return {\n      isOk: false\n    };\n  }\n}\n\nexport async function createAccount(email, password) {\n  try {\n    // Send request\n    console.log(email, password);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to create account\"\n    };\n  }\n}\n\nexport async function changePassword(email, recoveryCode) {\n  try {\n    // Send request\n    console.log(email, recoveryCode);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to change password\"\n    }\n  }\n}\n\nexport async function resetPassword(email) {\n  try {\n    // Send request\n    console.log(email);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to reset password\"\n    };\n  }\n}\n","C:\\react\\kolo3\\app-name\\src\\layouts\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\default-user.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\single-card\\single-card.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\footer\\footer.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\reset-password-form\\reset-password-form.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\login-form\\login-form.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\header\\header.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\side-navigation-menu\\side-navigation-menu.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\change-password-form\\change-password-form.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\create-account-form\\create-account-form.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\home\\home.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\profile\\profile.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\tasks\\tasks.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\patches.js",[],"C:\\react\\kolo3\\app-name\\src\\app-navigation.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\user-panel\\user-panel.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\orders\\order.jsx",["175","176","177","178","179","180","181"],"C:\\react\\kolo3\\app-name\\src\\pages\\orders\\orders.jsx",["182","183","184","185","186"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\n\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport DataGrid, {\r\n  Selection,\r\n  Paging,\r\n  FilterRow,\r\n  Scrolling,\r\n  Column,\r\n  Lookup,\r\n  Button as CButton,\r\n  StateStoring,\r\n} from \"devextreme-react/data-grid\";\r\nimport { Menu } from \"devextreme-react\";\r\n\r\n// import { useState, useRef } from 'react';\r\n// import { Order } from './order';\r\n// import { Popup } from 'devextreme-react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {convertToText,filterObj} from '../../utils/filtfunc'\r\nimport { API_HOST, resetOperationText, txtOperationDescriptions, uaFilterRow, uaFilterRowText } from './../../constants';\r\nimport { PartnerBox, partnerDataSource } from \"../../db/ds/dsPartners\";\r\n\r\nimport { useSubscription, gql} from \"@apollo/client\";\r\n//import Cookies  from 'universal-cookie';\r\n//import { useCookies } from 'react-cookie';\r\n//import { locale } from 'devextreme/localization';\r\n\r\n\r\nconst handleErrors = (response) => {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst customDataSource = new CustomStore({\r\n  key: \"_id\",\r\n\r\n  update: (dat) => {\r\n    console.log(dat);\r\n  },\r\n  load: (options) => {\r\n //   console.log(\"=Options:\" + JSON.stringify(options));\r\n    \r\n    const _jsonFilter = options.filter?\" jfilt:\"+convertToText(filterObj(options.filter)):''\r\n//    console.log('_jsonFilter:',_jsonFilter)\r\n\r\n\r\n    \r\n    let _sort = \"\";\r\n    if (options.sort) {\r\n      const __sort = options.sort[0] \r\n      _sort = ` sort:{selector:\"${__sort.selector}\" desc:\"${__sort.desc}\"}`;\r\n    } \r\n \r\n     let _search = ''\r\n    // let _search =\r\n    //   options.searchOperation && options.searchValue\r\n    //     ? ', nameContaine:\"' + options.searchValue + '\"'\r\n    //     : \"\";\r\n\r\n    var _offset = \"\";\r\n    if (options.skip) _offset = ` offset:${options.skip}`;\r\n\r\n    var _limit = 50;\r\n    if (options.take) _limit = options.take;\r\n\r\n    var _qT = ``;\r\n    if (options.requireTotalCount)\r\n      _qT = `totalcount:buyers_orders (limit:1 ${_search} ${_jsonFilter} totalCount:1)  { totalcount} `;\r\n\r\n    var q = `{${_qT} buyers_orders(limit:${_limit} ${_search} ${_sort}  ${_offset} ${_jsonFilter})\r\n                    { \r\n                     _id\r\n                     number_doc\r\n                     date\r\n                     doc_amount\r\n                     paid\r\n                     shipped\r\n                     note\r\n                     partner { \r\n                         _id ref name \r\n                        } \r\n\r\n                    }\r\n                 }`\r\n//  console.log ('=q=:',q)                 \r\n   return fetch(API_HOST, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n     // credentials: 'same-origin', mode:\"no-cors\",\r\n      body: JSON.stringify({\r\n        query: q,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n //                   mode:\"no-cors\" ,\r\n    })\r\n      .then(handleErrors)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        //               console.log(data.data)\r\n        if (data.errors) {\r\n          return { errors: data.errors[0] };\r\n        }\r\n\r\n        return {\r\n          data: data.data.buyers_orders,\r\n          totalCount: options.requireTotalCount\r\n              ? data.data.totalcount[0].totalcount\r\n              : undefined,\r\n          //summary: response.summary,\r\n          //groupCount: response.groupCount\r\n        };\r\n        // return ()\r\n      });\r\n    //.catch(() => { console.log( 'Network error' )});\r\n  },\r\n  // insert: (data) => {\r\n  //   createObject({\r\n  //     variables: { product: { ...data, oid: uuidv4() } },\r\n  //   }).then((xx) => refetch());\r\n  // },\r\n  // update: (key, values) => {\r\n  //   updateObject({\r\n  //     variables: {\r\n  //       product: { ...values },\r\n  //       oid: key,\r\n  //     },\r\n  //   });\r\n  // },\r\n  // remove: (key) => {\r\n  //   deleteObject({\r\n  //     variables: {\r\n  //       oid: key,\r\n  //     },\r\n  //   }).then((xx) => refetch());\r\n  // },\r\n});\r\n\r\nconst lookupDataSource = new CustomStore({\r\n  key: \"ref\",\r\n  byKey: function (key) {\r\n    //    console.log(\"2:\",this.);\r\n    var res = this.load({ lookUp: key });\r\n    return res.then((dat) => {\r\n      var ob = dat.data?.find((elem) => elem.ref === key);\r\n      return ob;\r\n    });\r\n  },\r\n  paginate: true,\r\n  pageSize: 10,\r\n  //        onModifying:(dat)=>{console.log(\"2:\",dat)},\r\n  load: async (options) => {\r\n    console.log(options);\r\n    if (options.filter) return { data: [] };\r\n    let search = \"\";\r\n    if (options.searchOperation && options.searchValue)\r\n      search = ', nameContaine:\"' + options.searchValue + '\"';\r\n\r\n    let lookUp = \"\";\r\n    if (options.lookUp) lookUp = ', lookup:\"' + options.lookUp + '\"';\r\n\r\n    //       console.log(options)\r\n    const q = `{partners (limit:50 ${lookUp} ${search})\r\n                    { \r\n                     ref \r\n                     name\r\n                    } \r\n                 }`;\r\n\r\n    //       console.log(q)\r\n    return fetch(API_HOST, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ query: q }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(handleErrors)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        //                console.log(data.data.partners)\r\n\r\n        return {\r\n          data: data.data.partners,\r\n          //                   totalCount: data.data.partners.length,\r\n        };\r\n      });\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nconst Orders = () => {\r\n  const refGrid = useRef()\r\n  const { user, signOut } = useAuth();\r\n    //    const [errorLoading, setDialogOpen] = useState(false);\r\n  const history = useHistory();\r\n  const [currRow,setCurrRow] = useState({ref:''})\r\n\r\n  const sq = gql(`subscription{docChange(input:{username:\"${user?user.email:''}\"})}`)\r\n  const  {data: docChange,loading: loading_docChange} = useSubscription(sq);\r\n    //console.log('=data=:',docChange,' =loading=:',loading_docChange)\r\n  \r\n    useEffect(() => {\r\n    console.log('=data=:',docChange,' =loading=:',loading_docChange)\r\n      refGrid.current.instance.refresh(true)\r\n       return () => {\r\n      // cleanup\r\n     }\r\n   }, [docChange,loading_docChange]) \r\n\r\n\r\nuseEffect(() => {\r\n  //etCurrRow()\r\n  \r\n  return () => {\r\n    \r\n  };\r\n}, [])\r\n\r\n  customDataSource.on(\"loaded\", function (result) {\r\n    if (result.errors) {\r\n      console.log(\"loaded Some error:\", result.errors);\r\n      signOut();\r\n    }\r\n  });\r\n\r\n  const setRow=(e)=>{\r\n    var r\r\n    if (e.row) r=e.row.data\r\n\r\n    if (e.data) r=e.data\r\n    \r\n    if (r){\r\n      r.ref = r._id.split('|')[1]\r\n      setCurrRow(r)\r\n    }  \r\n\r\n    }\r\n  // const classes = useStyles();\r\n\r\n  const editIconClick = (e) => {\r\n    console.log(\"Edit:\", e);\r\n    history.push(\"/order/\" + e.row.key.split(\"|\")[1]);\r\n  };\r\n\r\n  //     const sayHelloWorld = ()=> {\r\n  //         //setDialogOpen(!dialogOpen)\r\n  //         history.push('/order/72eae9aa-e11c-11ea-811a-00155da29310');\r\n  // //        alert('Hello world!')\r\n  //     }\r\n  //customDataSource.on('')\r\n  return (\r\n    <div height=\"5rem\">\r\n      {/* <Popup\r\n          visible={dialogOpen}\r\n          onHiding={()=>{setDialogOpen(!dialogOpen)}}\r\n          dragEnabled={false}\r\n          closeOnOutsideClick={true}\r\n          showTitle={true}\r\n          title=\"Замовлення\"\r\n          //width={600}\r\n          width=\"80%\"\r\n          //height={250}\r\n        >\r\n                <Order/>\r\n                </Popup>\r\n          <Button\r\n                text=\"Click me\"\r\n                onClick={sayHelloWorld}\r\n            /> */}\r\n    <Menu\r\n    onItemClick={(e) => {\r\n      console.log('menu item:',e);\r\n      switch(e.itemData.id){\r\n      case \"new\": { history.push(\"/order/new\");\r\n                    break\r\n                  }\r\n      case \"print\": {\r\n            var windowObjectReference = null;\r\n            var winParam = '';// `width=${window.screen.width*8/10},left=${window.screen.width/10}`\r\n            windowObjectReference = window.open(e.itemData.url, \"printwin\",winParam)\r\n            windowObjectReference.focus()\r\n            break\r\n          }\r\n          default:{}\r\n        }\r\n    }}\r\n    dataSource={[\r\n      {\r\n        text: \"Додати\",\r\n        id:\"new\"\r\n      },\r\n      {\r\n        text: \"Закрити\",\r\n      },\r\n      { text:\"Друк\",\r\n            icon:\"print\",\r\n              items:[\r\n                {\r\n                id:\"print\",\r\n                text:\"Рахунок\",\r\n                url:API_HOST+`/printform/${currRow.ref}/inv`,\r\n                disabled:!(currRow.ref&&currRow.number_doc),\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір\",\r\n                url:API_HOST+`/printform/${currRow.ref}/dog`,\r\n                disabled:!(currRow.ref&&currRow.number_doc),\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір сертифікації\",\r\n                url:API_HOST+`/printform/${currRow.ref}/dogs`,\r\n                disabled:!(currRow.ref&&currRow.number_doc),\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір для Казначейства\",\r\n                url:API_HOST+`/printform/${currRow.ref}/dogk`,\r\n                disabled:!(currRow.ref&&currRow.number_doc),\r\n              },\r\n        ]\r\n      },  \r\n    ]}></Menu>\r\n\r\n      <DataGrid\r\n        id=\"gridContainer\"\r\n        highlightChanges={true}\r\n        \r\n        ref = {refGrid}\r\n        dataSource={customDataSource}\r\n        allowColumnReordering={true}\r\n        allowColumnResizing={true}\r\n        showBorders={true}\r\n        allowSorting={true}\r\n        remoteOperations={true}\r\n        height={800}\r\n  //      focusedRowEnabled = {true}\r\n\r\n        onRowClick = {setRow}\r\n       // onFocusedRowChanged={setRow}\r\n        //   onEditingStart={this.onEditingStart}\r\n        //   onInitNewRow={this.onInitNewRow}\r\n        //   onRowInserting={this.onRowInserting}\r\n        //   onRowInserted={this.onRowInserted}\r\n        //   onRowUpdating={this.onRowUpdating}\r\n        //   onRowUpdated={this.onRowUpdated}\r\n        //   onRowRemoving={this.onRowRemoving}\r\n        //   onRowRemoved={this.onRowRemoved}\r\n        //   onSaving={this.onSaving}\r\n        //   onSaved={this.onSaved}\r\n        //   onEditCanceling={this.onEditCanceling}\r\n        //   onEditCanceled={this.onEditCanceled}\r\n      >\r\n            <StateStoring enabled={true} type=\"localStorage\" storageKey=\"orders\" />\r\n            <Selection mode=\"single\" />\r\n            <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\"  />\r\n            <Paging  pageSize={100} />\r\n            <FilterRow visible={true} {...uaFilterRowText}/>\r\n        {/* <Editing\r\n            mode=\"batch\" \r\n            allowUpdating={true}\r\n            selectTextOnEditStart={true}\r\n  //          startEditAction={this.state.startEditAction} \r\n\r\n            /> */}\r\n        <Column type=\"buttons\" width={35}>\r\n          <CButton name=\"_edit\" icon=\"edit\" onClick={editIconClick} />\r\n        </Column>\r\n\r\n        <Column width={145}\r\n          dataField=\"number_doc\"\r\n       \r\n          caption=\"Номер\"\r\n          dataType=\"string\"\r\n          //format=\"currency\"\r\n          alignment=\"left\"\r\n          //          allowEditing={true}\r\n        />\r\n        <Column width={130}\r\n          dataField=\"date\"\r\n          caption=\"Дата\"\r\n          dataType=\"date\"\r\n          format=\"dd/MM/yyyy HH:mm:ss\"\r\n          alignment=\"left\"\r\n        />\r\n        <Column width={400}\r\n        allowSorting={false}\r\n          dataField=\"partner.ref\"\r\n          caption=\"Контрагент\"\r\n          dataType=\"string\"\r\n          //format=\"currency\"\r\n          alignment=\"left\"\r\n          \r\n          onEditorPreparing  = {(e)=>{\r\n          console.log(e)\r\n        }}\r\n\r\n          calculateDisplayValue={(data) => {\r\n            //                console.log(data) ;\r\n            return data.partner?.name;\r\n          }}>\r\n  \r\n          <Lookup \r\n//            dataSource={lookupDataSource}\r\n            dataSource={partnerDataSource} allowClearing={true} \r\n\r\n            valueExpr=\"ref\"\r\n            displayExpr=\"name\"\r\n            minSearchLength={3}\r\n      \r\n            searchTimeout={500}>\r\n         \r\n            </Lookup>\r\n        </Column>\r\n\r\n        <Column width={100}\r\n          allowSorting={false}\r\n          dataField=\"doc_amount\"\r\n          caption=\"Сума\"\r\n          dataType=\"number\"\r\n          //format=\"currency\"\r\n          alignment=\"right\"\r\n        />\r\n        <Column width={100}\r\n          allowSorting={false}\r\n          dataField=\"shipped\"\r\n          caption=\"Відвантажено\"\r\n          dataType=\"number\"\r\n          //format=\"currency\"\r\n          alignment=\"right\"\r\n        />\r\n        <Column width={100}\r\n          allowSorting={false}\r\n          dataField=\"paid\"\r\n          caption=\"Сплачено\"\r\n          dataType=\"number\"\r\n          //format=\"currency\"\r\n          alignment=\"right\"\r\n        />\r\n        <Column \r\n          allowSorting={false}\r\n          dataField=\"note\"\r\n          caption=\"Коментар\"\r\n          dataType=\"number\"\r\n          //format=\"currency\"\r\n          alignment=\"left\"\r\n        />\r\n      </DataGrid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","C:\\react\\kolo3\\app-name\\src\\utils\\filtfunc.js",[],"C:\\react\\kolo3\\app-name\\src\\constants.jsx",[],"C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsNoms.jsx",[],"C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsPartners.jsx",["187","188"],"import CustomStore from \"devextreme/data/custom_store\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { DropDownBox } from \"devextreme-react/drop-down-box\";\r\nimport { catLoad } from './../../utils/filtfunc';\r\nimport { DataGrid,  Menu, Popup } from \"devextreme-react\";\r\nimport { Partner } from './../../pages/partner';\r\nimport { Column, FilterRow, Paging, Scrolling, Selection, StateStoring } from \"devextreme-react/data-grid\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\n\r\nimport { API_HOST, uaFilterRowText } from './../../constants';\r\nconst cls_name = 'partners'\r\nconst cls_fields = 'ref name edrpou id parent is_buyer is_supplier legal_address note name_full individual_legal inn'\r\n\r\nexport const partnerDataSource = new CustomStore({\r\n  key: \"ref\",\r\n\r\n\r\n  byKey: (ref) => {\r\n    if (!ref) return { ref: ref, name: \"\" };\r\n    console.log(\"=2:\", ref);\r\n    const q = `{${cls_name} (ref:\"${ref}\" ) {${cls_fields} } }`;\r\n\r\n    return (\r\n      fetch(API_HOST, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ query: q }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n      })\r\n        //        .then(handleErrors)\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          const res =\r\n            response.data[cls_name].length === 0\r\n              ? { ref: ref, name: \"\" }\r\n              : response.data[cls_name][0];\r\n          console.log(\"=res:\", res);\r\n          return res;\r\n        })\r\n    );\r\n  },\r\n\r\n  load: (options) => {\r\n    return catLoad(options,cls_name,cls_fields);\r\n    \r\n  },\r\n  insert: (val) => {\r\n    console.log(\"4:\");\r\n    return new Promise((resolve, reject) => {\r\n      resolve([{ text: \"Test insert\" }]);\r\n    });\r\n  },\r\n  remove: (key) => {\r\n    console.log(\"5:\");\r\n    return new Promise((resolve, reject) => {\r\n      resolve();\r\n    });\r\n  },\r\n  update: (dat, values) => {\r\n    console.log(\"6:\");\r\n    return new Promise((resolve, reject) => {\r\n      resolve([{ text: \"Test insert\" }]);\r\n    });\r\n  },\r\n});\r\n\r\npartnerDataSource.byEdrpou = async (edrpou)=>{\r\n    const options={filter:[\"edrpou\",\"=\",edrpou]}\r\n    const res = await catLoad(options,cls_name,cls_fields);\r\n    if (res.data &&res.data.length>0)\r\n      return res.data[0]\r\n    else return undefined  \r\n}\r\n\r\nexport const PartnerBox = (props)=>{\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n//  const [id, setId] = useState();\r\n  const currentRowData = useRef();\r\n//  console.log('currentRowData',currentRowData.current,'\\nid:',id,'value',props.value)\r\n  const ddbox = useRef()  \r\n  const dgrid = useRef()\r\n\r\n const currentRowData_byKeyAsync = async (key)=>{\r\n   var newObj = await partnerDataSource.byKey(key)\r\n   if (!newObj) newObj = {ref:key}\r\n    currentRowData.current = newObj\r\n }\r\n  useEffect( () => {\r\n    \r\n    if (!currentRowData.current) currentRowData.current = {ref:props.value}\r\n    currentRowData_byKeyAsync(props.value)\r\n    \r\n  //  setId(prev => props.value)\r\n    return () => {};\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.value]);\r\n\r\n  const viewButton = {\r\n  icon: 'search',\r\n  type: 'normal',//'default',\r\n  onClick: async () => {\r\n   // setId(id)\r\n    if (!currentRowData.current) {currentRowData.current = await partnerDataSource.byKey(props.value)}\r\n   \r\n    setDialogOpen(true)\r\n    ddbox.current.instance.open()\r\n  }\r\n};\r\n\r\n  const selectHandler = (rowData)=>{\r\n    if (props.onChange) props.onChange(rowData)\r\n    ddbox.current.instance.close()\r\n  }\r\n\r\n  const clickMenu = useCallback(\r\n    (e) => {\r\n        if (e.itemData.id === 'open') {\r\n          setDialogOpen(true)\r\n          }\r\n        if (e.itemData.id === 'select'){\r\n          selectHandler(currentRowData.current)\r\n          }\r\n        if(e.itemData.id === 'new')  {\r\n         \r\n          currentRowData.current = {ref:uuid_v4()}\r\n          setDialogOpen(true)\r\n        }\r\n        if (e.itemData.id ==='close')\r\n        {ddbox.current.instance.close()}  \r\n        console.log(e);\r\n      },\r\n    [],\r\n  )\r\n\r\n  return (\r\n    <DropDownBox \r\n    ref = {ddbox}\r\n    width=\"100%\"\r\n    value={props.value}\r\n    valueExpr=\"ref\"\r\n    deferRendering={false}\r\n    displayExpr=\"name\"\r\n    placeholder=\"контрагент ...\"\r\n    showClearButton={false}\r\n    dataSource={partnerDataSource}\r\n    buttons={[ 'dropDown',{name:\"search\", location:\"after\",options:viewButton}]}\r\n  >\r\n   \r\n\r\n   <Menu\r\n      onItemClick={clickMenu}\r\n      dataSource={[\r\n        {\r\n          text: \"Вибрати\",\r\n          id:\"select\",\r\n          visible: props.onChange !== undefined\r\n        },\r\n        {\r\n          text: \"Відкрити\",\r\n          id:\"open\"\r\n        },\r\n        {\r\n          text: \"Додати\",\r\n          id:\"new\"\r\n        },\r\n        {\r\n          text: \"Закрити\",\r\n          id:\"close\"\r\n        },\r\n        // {\r\n        //   text: \"Інше\",\r\n        //   items: [\r\n        //     {\r\n        //       text: \" інше 1\",\r\n        //     },\r\n        //     {\r\n        //       text: \"штше 2\",\r\n        //     },\r\n        //   ],\r\n        // },\r\n      ]}></Menu>\r\n     \r\n     <Popup\r\n        visible={dialogOpen}\r\n       \r\n        onHiding={()=>{setDialogOpen(false)}}\r\n        dragEnabled={true}\r\n        closeOnOutsideClick={true}\r\n        showTitle={true}\r\n        title=\"-Контрагент-\"\r\n        width=\"75%\"\r\n        >\r\n        <Partner _id={currentRowData.current?currentRowData.current:props.value}/>\r\n      </Popup>      \r\n     \r\n\r\n    <DataGrid\r\n    ref = {dgrid}\r\n      remoteOperations={true}\r\n      dataSource={partnerDataSource}\r\n      onFocusedRowChanged={(e)=>{\r\n                if (e.row) currentRowData.current = e.row.data\r\n                else currentRowData.current = {name:'',ref:''}\r\n     //   console.log(e)\r\n      }}\r\n      hoverStateEnabled={true}\r\n //     focusedRowEnabled = {true}\r\n      focusedRowKey = {props.value}\r\n      \r\n      onRowDblClick={(e)=>{\r\n        selectHandler(e.data)\r\n      }}\r\n      onSelectionChanged={(e) => {\r\n        if(e.selectedRowsData.length){\r\n          currentRowData.current = e.selectedRowsData[0]\r\n //         setId(e.selectedRowsData[0].ref)\r\n     }\r\n        \r\n      }}\r\n      height=\"90%\">\r\n      \r\n      {/* <StateStoring enabled={true} type=\"localStorage\" storageKey=\"storageP\" /> */}\r\n            <Selection mode=\"single\" />\r\n      <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\" />\r\n      <Paging enabled={true} pageSize={100} />\r\n      <FilterRow visible={true} {...uaFilterRowText}/>\r\n      <Column dataField=\"ref\" visible={false} />\r\n      <Column dataField=\"name\" caption=\"Назва\" filterOperations={['contains','startswith','endswith' ]}/>\r\n      <Column dataField=\"edrpou\" caption=\"код ЄДРПОУ\" filterOperations={['startswith']} />\r\n    </DataGrid>\r\n  </DropDownBox>\r\n  )\r\n}\r\n","C:\\react\\kolo3\\app-name\\src\\pages\\partner.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\test\\test.js",["189"],"import { Popup, ScrollView, TextBox } from 'devextreme-react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { nomsDataSource } from '../../db/ds/dsNoms';\nimport { DataGrid } from 'devextreme-react';\nimport { Position } from 'devextreme-react/popup';\n\nnomsDataSource.userOptions.selectServices = true;\n\nexport const TestPage = (props) => {\n\n  const searchField = props.searchField||'name'\n  const keyField = props.keyField||'ref'\n\n  const ref = useRef()\n  const textBoxRef = useRef()\n  const [value, setValue] = useState(props.value)\n  const [row, setRow] = useState(undefined)\n  const [rowIndex, setRowIndex] = useState(undefined)\n  const [result, setResult] = useState()\n  const [gridVisible, setGridVisible] = useState(false)\n\n\n  const changeValue= (e)=>{\n    setGridVisible(true)\n    setValue(e.event.target.value)\n    setRowIndex(undefined)\n    if(ref&&ref.current)\n      ref.current.instance.clearSelection()\n  }\n\n\n  useEffect(() => {\n    console.log('==result:',result)\n    setGridVisible(false)\n    if (props.onChange)\n      props.onChange(result)\n\n},[result])\n\nuseEffect(() => {\n  if (gridVisible){\n\n    setTimeout(function () {  \n      textBoxRef.current.instance.focus()\n  }, 500);   }\n},[gridVisible])\n\n  useEffect(() => {\n  if (ref&&ref.current&&ref.current.instance)\n    ref.current.instance.filter([searchField,'contains',value])\n   return () => {\n   };\n }, [searchField, value]) \n\n\nconst rowClick = (e) =>{\n  setValue(e.data[searchField])\n  setResult(e.key)\n}\nconst renderContent = () => {\n    return (\n      <ScrollView width='100%' height='100%'>\n        <DataGrid ref={ref}\n          dataSource={nomsDataSource} paging={false}\n          selection={{ mode: 'single' }}\n          columns={[{dataField:'name',width:'80',caption:'Назва'},{dataField:'name_full',caption:'Повна назва'}]}\n          onRowClick={rowClick}\n         />\n      </ScrollView>\n    );\n}\nconst enterKey = (e)=>{\n  let _rowIndex = undefined\n  switch (e.event.code) {\n    case 'ArrowDown':{\n      _rowIndex = (rowIndex>=0)?Math.min(rowIndex+1,ref.current.instance.totalCount()-1):0\n      break\n    }\n    case 'ArrowUp':{\n      _rowIndex = (rowIndex>0)?Math.max(rowIndex-1,0):0\n      break\n    }\n    case 'Enter':{\n      if (row){\n        const r = row[0] \n        setValue(r[searchField])\n        setResult(r[keyField])\n      }\n      else if (ref.current.instance.totalCount()===1) {\n        const r = ref.current.instance.getSelectedRowsData()[0]\n          setValue(r[searchField])\n          setResult(r[keyField])\n        } \n      e.event.preventDefault()\n\n      break\n    }\n  default:{\n\n      }\n    }\n    if (_rowIndex!==undefined) {\n      ref.current.instance.selectRowsByIndexes(_rowIndex)\n      setRowIndex(_rowIndex)\n      setRow(ref.current.instance.getSelectedRowsData())\n      e.event.preventDefault()\n    }    \n}\n  return (\n  <React.Fragment>\n    <h2 className={'content-block'}>Test</h2>\n    <TextBox ref={textBoxRef} id=\"tgrt\"  onInput={changeValue} onKeyDown={enterKey} value={value} > </TextBox>\n    <Popup \n      visible={gridVisible} showTitle={false}\n      contentRender={renderContent} shading ={false} \n      \n    >\n     <Position\n                    my=\"left top\"\n                    at=\"left bottom\"\n                    of=\"#tgrt\"\n                />\n    </Popup>  \n  </React.Fragment>\n)};\n\n","C:\\react\\kolo3\\app-name\\src\\components\\otk\\AutocompleteOTK.jsx",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":85,"column":9,"nodeType":"200","messageId":"201","endLine":89,"endColumn":4},{"ruleId":"194","severity":1,"message":"202","line":4,"column":34,"nodeType":"196","messageId":"197","endLine":4,"endColumn":46},{"ruleId":"194","severity":1,"message":"203","line":11,"column":10,"nodeType":"196","messageId":"197","endLine":11,"endColumn":21},{"ruleId":"194","severity":1,"message":"204","line":13,"column":3,"nodeType":"196","messageId":"197","endLine":13,"endColumn":12},{"ruleId":"194","severity":1,"message":"205","line":14,"column":3,"nodeType":"196","messageId":"197","endLine":14,"endColumn":9},{"ruleId":"194","severity":1,"message":"206","line":15,"column":3,"nodeType":"196","messageId":"197","endLine":15,"endColumn":12},{"ruleId":"194","severity":1,"message":"207","line":16,"column":3,"nodeType":"196","messageId":"197","endLine":16,"endColumn":12},{"ruleId":"194","severity":1,"message":"208","line":30,"column":20,"nodeType":"196","messageId":"197","endLine":30,"endColumn":35},{"ruleId":"194","severity":1,"message":"209","line":25,"column":20,"nodeType":"196","messageId":"197","endLine":25,"endColumn":38},{"ruleId":"194","severity":1,"message":"210","line":25,"column":40,"nodeType":"196","messageId":"197","endLine":25,"endColumn":64},{"ruleId":"194","severity":1,"message":"211","line":25,"column":66,"nodeType":"196","messageId":"197","endLine":25,"endColumn":77},{"ruleId":"194","severity":1,"message":"212","line":26,"column":10,"nodeType":"196","messageId":"197","endLine":26,"endColumn":20},{"ruleId":"194","severity":1,"message":"213","line":154,"column":7,"nodeType":"196","messageId":"197","endLine":154,"endColumn":23},{"ruleId":"194","severity":1,"message":"214","line":8,"column":59,"nodeType":"196","messageId":"197","endLine":8,"endColumn":71},{"ruleId":"215","severity":1,"message":"216","line":136,"column":5,"nodeType":"217","endLine":136,"endColumn":7,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"219","line":38,"column":3,"nodeType":"217","endLine":38,"endColumn":11,"suggestions":"220"},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'defaultUser' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","'Autocomplete' is defined but never used.","'DropDownBox' is defined but never used.","'Selection' is defined but never used.","'Paging' is defined but never used.","'FilterRow' is defined but never used.","'Scrolling' is defined but never used.","'uaFilterRowText' is defined but never used.","'resetOperationText' is defined but never used.","'txtOperationDescriptions' is defined but never used.","'uaFilterRow' is defined but never used.","'PartnerBox' is defined but never used.","'lookupDataSource' is assigned a value but never used.","'StateStoring' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'selectHandler'. Either include it or remove the dependency array.","ArrayExpression",["223"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [selectHandler]",{"range":"229","text":"230"},"Update the dependencies array to be: [props, result]",{"range":"231","text":"232"},[4090,4092],"[selectHandler]",[1080,1088],"[props, result]"]