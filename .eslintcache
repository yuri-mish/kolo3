[{"C:\\react\\kolo3\\app-name\\src\\index.js":"1","C:\\react\\kolo3\\app-name\\src\\polyfills.js":"2","C:\\react\\kolo3\\app-name\\src\\reportWebVitals.js":"3","C:\\react\\kolo3\\app-name\\src\\App.js":"4","C:\\react\\kolo3\\app-name\\src\\Content.js":"5","C:\\react\\kolo3\\app-name\\src\\UnauthenticatedContent.js":"6","C:\\react\\kolo3\\app-name\\src\\contexts\\navigation.js":"7","C:\\react\\kolo3\\app-name\\src\\contexts\\auth.js":"8","C:\\react\\kolo3\\app-name\\src\\utils\\media-query.js":"9","C:\\react\\kolo3\\app-name\\src\\app-info.js":"10","C:\\react\\kolo3\\app-name\\src\\app-routes.js":"11","C:\\react\\kolo3\\app-name\\src\\api\\auth.js":"12","C:\\react\\kolo3\\app-name\\src\\layouts\\index.js":"13","C:\\react\\kolo3\\app-name\\src\\components\\index.js":"14","C:\\react\\kolo3\\app-name\\src\\utils\\default-user.js":"15","C:\\react\\kolo3\\app-name\\src\\pages\\index.js":"16","C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js":"17","C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js":"18","C:\\react\\kolo3\\app-name\\src\\layouts\\single-card\\single-card.js":"19","C:\\react\\kolo3\\app-name\\src\\components\\footer\\footer.js":"20","C:\\react\\kolo3\\app-name\\src\\components\\reset-password-form\\reset-password-form.js":"21","C:\\react\\kolo3\\app-name\\src\\components\\login-form\\login-form.js":"22","C:\\react\\kolo3\\app-name\\src\\components\\header\\header.js":"23","C:\\react\\kolo3\\app-name\\src\\components\\side-navigation-menu\\side-navigation-menu.js":"24","C:\\react\\kolo3\\app-name\\src\\components\\change-password-form\\change-password-form.js":"25","C:\\react\\kolo3\\app-name\\src\\components\\create-account-form\\create-account-form.js":"26","C:\\react\\kolo3\\app-name\\src\\pages\\home\\home.js":"27","C:\\react\\kolo3\\app-name\\src\\pages\\profile\\profile.js":"28","C:\\react\\kolo3\\app-name\\src\\pages\\tasks\\tasks.js":"29","C:\\react\\kolo3\\app-name\\src\\utils\\patches.js":"30","C:\\react\\kolo3\\app-name\\src\\app-navigation.js":"31","C:\\react\\kolo3\\app-name\\src\\components\\user-panel\\user-panel.js":"32","C:\\react\\kolo3\\app-name\\src\\pages\\orders\\order.jsx":"33","C:\\react\\kolo3\\app-name\\src\\pages\\orders\\orders.jsx":"34","C:\\react\\kolo3\\app-name\\src\\utils\\filtfunc.js":"35","C:\\react\\kolo3\\app-name\\src\\constants.jsx":"36","C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsNoms.jsx":"37","C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsPartners.jsx":"38","C:\\react\\kolo3\\app-name\\src\\pages\\partner.js":"39"},{"size":522,"mtime":1608651477646,"results":"40","hashOfConfig":"41"},{"size":70,"mtime":1608651477623,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1608651424074,"results":"43","hashOfConfig":"41"},{"size":1115,"mtime":1608811284562,"results":"44","hashOfConfig":"41"},{"size":860,"mtime":1608811976516,"results":"45","hashOfConfig":"41"},{"size":1136,"mtime":1608811119013,"results":"46","hashOfConfig":"41"},{"size":805,"mtime":1608651477610,"results":"47","hashOfConfig":"41"},{"size":966,"mtime":1608821618694,"results":"48","hashOfConfig":"41"},{"size":1518,"mtime":1608651477629,"results":"49","hashOfConfig":"41"},{"size":110,"mtime":1611054840249,"results":"50","hashOfConfig":"41"},{"size":642,"mtime":1609930024565,"results":"51","hashOfConfig":"41"},{"size":2564,"mtime":1610433623143,"results":"52","hashOfConfig":"41"},{"size":230,"mtime":1608810364853,"results":"53","hashOfConfig":"41"},{"size":459,"mtime":1608810942831,"results":"54","hashOfConfig":"41"},{"size":177,"mtime":1608809852459,"results":"55","hashOfConfig":"41"},{"size":294,"mtime":1609930078102,"results":"56","hashOfConfig":"41"},{"size":3609,"mtime":1608810331590,"results":"57","hashOfConfig":"41"},{"size":4061,"mtime":1608810358003,"results":"58","hashOfConfig":"41"},{"size":501,"mtime":1608810269828,"results":"59","hashOfConfig":"41"},{"size":148,"mtime":1608810890785,"results":"60","hashOfConfig":"41"},{"size":2325,"mtime":1608810737492,"results":"61","hashOfConfig":"41"},{"size":3072,"mtime":1611138057472,"results":"62","hashOfConfig":"41"},{"size":1269,"mtime":1608810844722,"results":"63","hashOfConfig":"41"},{"size":2209,"mtime":1608810709923,"results":"64","hashOfConfig":"41"},{"size":2526,"mtime":1608810956195,"results":"65","hashOfConfig":"41"},{"size":3312,"mtime":1608810926867,"results":"66","hashOfConfig":"41"},{"size":12658,"mtime":1611052505766,"results":"67","hashOfConfig":"41"},{"size":1548,"mtime":1608810159634,"results":"68","hashOfConfig":"41"},{"size":2467,"mtime":1608809929873,"results":"69","hashOfConfig":"41"},{"size":445,"mtime":1608651477629,"results":"70","hashOfConfig":"41"},{"size":414,"mtime":1611051843355,"results":"71","hashOfConfig":"41"},{"size":1721,"mtime":1608810657599,"results":"72","hashOfConfig":"41"},{"size":22436,"mtime":1611225848903,"results":"73","hashOfConfig":"41"},{"size":12764,"mtime":1611231243353,"results":"74","hashOfConfig":"41"},{"size":3197,"mtime":1611221737515,"results":"75","hashOfConfig":"41"},{"size":104,"mtime":1610364659714,"results":"76","hashOfConfig":"41"},{"size":1660,"mtime":1610348803494,"results":"77","hashOfConfig":"41"},{"size":6770,"mtime":1611237366995,"results":"78","hashOfConfig":"41"},{"size":10784,"mtime":1611243898262,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1cmkse7",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\react\\kolo3\\app-name\\src\\index.js",[],["164","165"],"C:\\react\\kolo3\\app-name\\src\\polyfills.js",[],"C:\\react\\kolo3\\app-name\\src\\reportWebVitals.js",[],"C:\\react\\kolo3\\app-name\\src\\App.js",[],"C:\\react\\kolo3\\app-name\\src\\Content.js",[],"C:\\react\\kolo3\\app-name\\src\\UnauthenticatedContent.js",[],"C:\\react\\kolo3\\app-name\\src\\contexts\\navigation.js",[],"C:\\react\\kolo3\\app-name\\src\\contexts\\auth.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\media-query.js",[],"C:\\react\\kolo3\\app-name\\src\\app-info.js",[],"C:\\react\\kolo3\\app-name\\src\\app-routes.js",[],"C:\\react\\kolo3\\app-name\\src\\api\\auth.js",["166","167"],"import defaultUser from '../utils/default-user';\nimport { API_HOST } from './../constants';\n\nconst getAuth = async (user,pass) => {\n  const auth =  await  fetch(API_HOST, {\n    method: \"POST\",\n    credentials:'include', \n    //mode:'cors',\n      body: JSON.stringify({\n      query: `{auth (name:\"${user}\",pass:\"${pass}\") }`, \n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    })\n    .then((response) => {\n      console.log(response)\n      return response.json();\n    })\n    .then((data) => {\n//      data.data.auth.branch = data.data.branch\n\n       return data.data.auth\n    }).catch((e)=>console.log('Ooops',e));\n\n    return auth\n};\n\nexport const logout = async (user,pass) => {\n  return await fetch(API_HOST, {\n    method: \"POST\",\n    credentials:'include', \n    //credentials: 'same-origin',\n    body: JSON.stringify({\n      query: `{logout\n              }`,\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n       return data.data.logout\n    });\n};\n\n\nexport async function signIn(email, password) {\n  try {\n    var result = await getAuth(email,password)\n    // Send request\n    //console.log(result, email, password);\n\n    return {\n      isOk: result.ok,\n      message: result.ok ? '':'Помилка входу',\n      data: {\n              email: email,\n              avatarUrl: 'https://otk.in.ua/wp-content/uploads/2020/07/logo.svg',\n}\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Authentication failed\"\n    };\n  }\n}\n\nexport async function getUser() {\n  try {\n    // Send request\n\n    return {\n      isOk: false,\n\n      //      isOk: true,\n//      data: defaultUser\n    };\n  }\n  catch {\n    return {\n      isOk: false\n    };\n  }\n}\n\nexport async function createAccount(email, password) {\n  try {\n    // Send request\n    console.log(email, password);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to create account\"\n    };\n  }\n}\n\nexport async function changePassword(email, recoveryCode) {\n  try {\n    // Send request\n    console.log(email, recoveryCode);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to change password\"\n    }\n  }\n}\n\nexport async function resetPassword(email) {\n  try {\n    // Send request\n    console.log(email);\n\n    return {\n      isOk: true\n    };\n  }\n  catch {\n    return {\n      isOk: false,\n      message: \"Failed to reset password\"\n    };\n  }\n}\n","C:\\react\\kolo3\\app-name\\src\\layouts\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\default-user.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\index.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-outer-toolbar\\side-nav-outer-toolbar.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\side-nav-inner-toolbar\\side-nav-inner-toolbar.js",[],"C:\\react\\kolo3\\app-name\\src\\layouts\\single-card\\single-card.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\footer\\footer.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\reset-password-form\\reset-password-form.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\login-form\\login-form.js",["168","169"],"import React, { useState, useRef, useCallback } from 'react';\n//import { Link, useHistory } from 'react-router-dom';\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n//  EmailRule\n} from 'devextreme-react/form';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport notify from 'devextreme/ui/notify';\nimport { useAuth } from '../../contexts/auth';\nimport { useSubscription, gql } from \"@apollo/client\";\n\nimport './login-form.scss';\n\nexport const LoginForm = ()=> {\n  //const history = useHistory();\n  const { signIn } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({});\n\n  const onSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    const { email, password } = formData.current;\n    setLoading(true);\n\n    const result = await signIn(email, password);\n    if (!result.isOk) {\n      setLoading(false);\n      notify(result.message, 'error', 2000);\n    }\n  }, [signIn]);\n\n  // const onCreateAccountClick = useCallback(() => {\n  //   history.push('/create-account');\n  // }, [history]);\n\n  return (\n    <form className={'login-form'} onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'email'}\n          editorType={'dxTextBox'}\n          editorOptions={emailEditorOptions}\n        >\n          <RequiredRule message=\"заповнення обов'язкове\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'password'}\n          editorType={'dxTextBox'}\n          editorOptions={passwordEditorOptions}\n        >\n          <RequiredRule message=\"заповнення обов'язкове\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'rememberMe'}\n          editorType={'dxCheckBox'}\n          editorOptions={rememberMeEditorOptions}\n        >\n          <Label visible={false} />\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Вхід'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n        {/* <Item>\n          <div className={'link'}>\n            <Link to={'/reset-password'}>Forgot password?</Link>\n          </div>\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            text={'Create an account'}\n            width={'100%'}\n            onClick={onCreateAccountClick}\n          />\n        </ButtonItem> */}\n      </Form>\n    </form>\n  );\n}\n\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Користувач',  };\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Пароль', mode: 'password' };\nconst rememberMeEditorOptions = { text: 'запам\\'ятати мене', elementAttr: { class: 'form-text' } };\n","C:\\react\\kolo3\\app-name\\src\\components\\header\\header.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\side-navigation-menu\\side-navigation-menu.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\change-password-form\\change-password-form.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\create-account-form\\create-account-form.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\home\\home.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\profile\\profile.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\tasks\\tasks.js",[],"C:\\react\\kolo3\\app-name\\src\\utils\\patches.js",[],"C:\\react\\kolo3\\app-name\\src\\app-navigation.js",[],"C:\\react\\kolo3\\app-name\\src\\components\\user-panel\\user-panel.js",[],"C:\\react\\kolo3\\app-name\\src\\pages\\orders\\order.jsx",["170","171","172","173","174","175","176","177"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { TextBox, DateBox, Menu, Popup } from \"devextreme-react\";\r\nimport Toolbar, { Item } from \"devextreme-react/toolbar\";\r\nimport { locale } from \"devextreme/localization\";\r\nimport moment from \"moment\";\r\n//import {lodash as _ } from \"lodash\"\r\n//import Lookup from \"devextreme-react/lookup\";\r\n//import { RemoteOperations } from \"devextreme-react/data-grid\";\r\nimport { DropDownBox } from \"devextreme-react/drop-down-box\";\r\nimport DataGrid, {\r\n  Selection,\r\n  Paging,\r\n  FilterRow,\r\n  Scrolling,\r\n  Column,\r\n  Editing,\r\n  Lookup,\r\n  Texts,\r\n} from \"devextreme-react/data-grid\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\n\r\nimport { partnerDataSource , PartnerBox} from \"../../db/ds/dsPartners\";\r\nimport { nomsDataSource } from \"../../db/ds/dsNoms\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport  notify  from 'devextreme/ui/notify';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ChartTitleSubtitle } from \"devextreme-react/chart\";\r\nimport { convertToText } from \"../../utils/filtfunc\";\r\nimport { Partner } from \"../partner\";\r\nimport { API_HOST } from './../../constants';\r\n\r\nvar _ = require('lodash');\r\n\r\nexport const Order = (props) => {\r\n  const history = useHistory();\r\n\r\n  var rowData = {};\r\n\r\n  let { id } = useParams();\r\n\r\n  const OrderSchema = {\r\n    date: moment(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n    number_doc: \"\",\r\n    class_name:\"doc.buyers_order\",\r\n    partner: { ref: \"\", name: \"\" },\r\n    services: [{ nom: { ref: \"\", name: \"\" }, price: 0 }],\r\n    doc_amount: 0,\r\n    vat_included:true,\r\n    doc_currency:'',\r\n  };\r\n\r\n  const [data, setData] = useState(OrderSchema);\r\n\r\n  const [prices, setPrices] = useState();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const load = () => {\r\n    return fetch(API_HOST, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        query: `{buyers_orders(ref:\"${id}\",limit:1) {\r\n                    _id\r\n                    doc_amount\r\n                    vat_included\r\n                    number_doc\r\n                    date\r\n                    partner{ref name}\r\n                    organization{ref name}\r\n                    ClientPerson\r\n                    ClientPersonPhone\r\n                    responsible {ref name}\r\n                    note\r\n                    services {\r\n                      nom {\r\n                        _id\r\n                        ref\r\n                        name\r\n                        name_full\r\n                      }\r\n                      row content price quantity amount discount_percent discount_percent_automatic gos_code vin_code vat_rate vat_amount\r\n                    }\r\n                  }\r\n                }`,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //              mode:\"no-cors\" ,\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        if (data.data.buyers_orders && data.data.buyers_orders.length > 0){\r\n          \r\n          data.data.buyers_orders[0].services.forEach((r)=>{\r\n              const calcPrice = Math.round(r.amount/r.quantity,-2)\r\n              r.nats = 0; r.spec = 0\r\n              if (calcPrice > r.price)\r\n                         r.nats = calcPrice - r.price\r\n              if (calcPrice < r.price && r.discount_percent_automatic === 0)\r\n                         r.spec = calcPrice           \r\n            })\r\n          setData(data.data.buyers_orders[0]);\r\n          loadPrices(data.data.buyers_orders[0].date)\r\n        }\r\n        else {\r\n          loadPrices()\r\n        }\r\n        // return ()\r\n      });\r\n  };\r\n\r\n  const loadPrices = async (date)=>{\r\n     \r\n    if (!date) date = moment(Date.now()).format(\"YYYY-MM-DDTHH:mm:ss\")\r\n    const datePatam= `(date:\"${date}\")`\r\n    return fetch(API_HOST, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        query: `{prices ${datePatam} { nom price currency vat_included }}`,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //              mode:\"no-cors\" ,\r\n    })\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log('=prices response:',data);\r\n        var pr = []\r\n        if (data.data.prices && data.data.prices.length > 0){\r\n          pr = data.data.prices\r\n          const vat_included = pr[0].vat_included === 'true'\r\n          const doc_currency = pr[0].currency\r\n          setData((prevState) => ({\r\n            ...prevState,\r\n            vat_included:vat_included,\r\n            doc_currency:doc_currency\r\n          }));\r\n        }\r\n          setPrices(pr);\r\n          return pr\r\n      });\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    load();\r\n    loadPrices();\r\n    return () => {};\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const onValueChanged = (param) => {\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      date: moment(param.value).format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n    }));\r\n  };\r\n\r\n  locale(\"uk\"); //!!!!+++\r\n  console.log(\"=\" + data.date);\r\n\r\n  const onQuantityChanged = (r) => {\r\n    calcrRow(rowData)\r\n\r\n  };\r\n\r\n  const calcrRow = (currentRowData) =>{\r\n    var doc_amount=0\r\n    if (!currentRowData.quantity) \r\n          currentRowData.quantity=1\r\n    const pr = currentRowData.spec?currentRowData.spec:(currentRowData.price+(currentRowData.nats?currentRowData.nats:0))\r\n    currentRowData.amount = pr * currentRowData.quantity;\r\n    if (isNaN(currentRowData.amount)) currentRowData.amount = 0\r\n    if (currentRowData.vat_rate===\"НДС20\") currentRowData.vat_amount = Math.round(currentRowData.amount/6, -2)\r\n      else currentRowData.vat_amount=0\r\n    data.services.forEach(r=>{doc_amount+= (r.row===currentRowData.row)?currentRowData.amount:r.amount})\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      doc_amount:doc_amount,\r\n      services: prevState.services.map((row) => {\r\n        if (row.row === currentRowData.row) return currentRowData;\r\n        else return row;\r\n      }),\r\n    \r\n    }));\r\n    \r\n  }\r\n  const onchangeNom = async (newData, value, currentRowData)=>{\r\n    //console.log('=newData=',newData,'=value=',value,'=currentRowDatar=',currentRowData) \r\n    var pricerow = prices.find((r)=>{return r.nom === value})\r\n    currentRowData.price = pricerow?pricerow.price:0\r\n    var res = await nomsDataSource.byKey(value)\r\n    if (res) {\r\n      currentRowData.content = res.name_full\r\n      if (res.vat_rate) currentRowData.vat_rate = res.vat_rate\r\n    }\r\n    currentRowData.nom.ref = value\r\n    currentRowData.amount = 0\r\n\r\n    calcrRow(currentRowData)\r\n    \r\n    console.log('price=',currentRowData.price)\r\n  }\r\n\r\n  const onchangeDate = async (param)=>{\r\n    setData((prevState) => ({\r\n      ...prevState,\r\n      date: moment(param.value).format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n    }));\r\n    const newprice = await loadPrices(moment(param.value).format(\"YYYY-MM-DDTHH:mm:ss\"))\r\n    data.services.forEach((row)=>{\r\n      var pricerow = newprice.find((priceRow)=>{return priceRow.nom === row.nom.ref})\r\n      row.price = pricerow?pricerow.price:0\r\n      calcrRow(row)\r\n    })\r\n  }\r\n  const addButtonOptions = {\r\n    icon: \"plus\",\r\n    onClick: () => {\r\n      var st = data.services.slice();\r\n      console.log(\"New row:\", st);\r\n      st.push({\r\n        row: data.services.length + 1,\r\n        nom: { ref: undefined, name: \"<послуга>\" },\r\n      });\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        services: st,\r\n      }));\r\n    },\r\n  };\r\n\r\n  const deleteButtonOptions = {\r\n    icon: \"minus\",\r\n    disabled: false,\r\n\r\n    onClick: () => {\r\n      var st = data.services.filter((row) => row.row !== rowData?.row);\r\n      deleteButtonOptions.disabled = st.length === 0;\r\n      //      console.log('delete row:',st)\r\n\r\n      setData((prevState) => ({\r\n        ...prevState,\r\n        services: st,\r\n      }));\r\n    },\r\n  };\r\n\r\n\r\n\r\n  const showError = (message)=>{\r\n                    notify({message:message,position: { at: 'center'}}, \"error\", 5000);\r\n  }\r\n\r\nconst cellTemplate = (r)=>{\r\n  return (\r\n    \r\n  <DropDownBox\r\n  width=\"250px\"\r\n  value={r.data.value}\r\n  valueExpr=\"ref\"\r\n  deferRendering={false}\r\n  displayExpr=\"name\"\r\n  //              displayExpr={this.gridBox_displayExpr}\r\n  placeholder=\"послуга ...\"\r\n  showClearButton={false}\r\n  dataSource={nomsDataSource}\r\n  dropDownOptions={{width:\"888px\"}}\r\n  //  onValueChanged={(e) => {\r\n\r\n  //    console.log(e);\r\n  //  }}\r\n  //             contentRender={dataGridRender}\r\n>\r\n\r\n  <Menu\r\n    onItemClick={(e) => {\r\n      console.log('menu item:',e);\r\n    }}\r\n    dataSource={[\r\n      {\r\n        text: \"Вибрати\",\r\n      },\r\n      // {\r\n      //   text: \"Додати\",\r\n      // },\r\n      {\r\n        text: \"Закрити\",\r\n      },\r\n      \r\n      {\r\n        text: \"Інше\",\r\n        items: [\r\n          {\r\n            text: \" інше 1\",\r\n          },\r\n          {\r\n            text: \"штше 2\",\r\n          },\r\n        ],\r\n      },\r\n    ]}></Menu>\r\n\r\n  <DataGrid\r\n    remoteOperations={true}\r\n    dataSource={nomsDataSource}\r\n\r\n    hoverStateEnabled={true}\r\n    \r\n    //selectedRowKeys={this.state.gridBoxValue}\r\n     onSelectionChanged={(e) => {\r\n    //   setData((prevState) => ({\r\n    //     ...prevState,\r\n    //     partner: {\r\n    //       ref: e.selectedRowsData[0].ref,\r\n    //       name: e.selectedRowsData[0].name,\r\n    //     },\r\n    //   }));\r\n    r.data.setValue(e.selectedRowsData[0].ref,e.selectedRowsData[0].name)\r\n    //r.data.row.content = e.selectedRowsData[0].name_full\r\n    console.log('===onSelectionChanged:',e);\r\n    }}\r\n    \r\n    height=\"90%\">\r\n    \r\n    <Selection mode=\"single\" />\r\n    <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\" />\r\n    <Paging enabled={true} pageSize={200} />\r\n    <FilterRow visible={true} />\r\n    <Column dataField=\"ref\" visible={false} />\r\n    <Column dataField=\"name\" caption=\"Назва\" width=\"150px\"/>\r\n    <Column dataField=\"name_full\" caption=\"Повна назва\"/> \r\n    \r\n  </DataGrid>\r\n  \r\n</DropDownBox>\r\n\r\n  )\r\n}\r\n\r\nconst changeReq = (e)=>{\r\n  setData((prevState) => ({\r\n      ...prevState,\r\n      [e.element.id]:e.event.target.value\r\n    \r\n    }));\r\n}\r\n// const calcNats = (data)=>{\r\n//   if (data.quantity===0) return 0\r\n//     const calcPrice = Math.round(data.amount/data.quantity,-2)\r\n//     if (calcPrice > data.price)\r\n//     {\r\n//       return calcPrice - data.price\r\n//     }\r\n//     else return 0\r\n// }\r\n// const calcSpec = (data) => {\r\n//   if (data.quantity===0) return 0\r\n//     const calcPrice = Math.round(data.amount/data.quantity,-2)\r\n//     console.log(calcPrice)\r\n//     if (calcPrice < data.price && data.discount_percent_automatic === 0)\r\n//     {\r\n//       return calcPrice\r\n//     }\r\n//     else return 0\r\n// }\r\n\r\n  return (\r\n    <div>\r\n      <Menu \r\n        onItemClick={async e => {\r\n          switch(e.itemData.id){\r\n           case \"ok\": {\r\n            var doctosave = _.cloneDeep(data)\r\n            if (id===\"new\"){\r\n              doctosave._id='doc.buyers_order|'+uuid_v4()\r\n              doctosave.class_name=\"doc.buyers_order\"\r\n            }\r\n            doctosave.partner=doctosave.partner.ref  \r\n            if (doctosave.organization) doctosave.organization=doctosave.organization.ref  \r\n            if (doctosave.responsible) delete doctosave.responsible  \r\n\r\n            //doctosave.savetime = moment.now()\r\n\r\n            \r\n            doctosave.services.forEach(r=>{\r\n              if (r.spec) delete r.spec\r\n              if (r.nats) delete r.spec\r\n              return r.nom = r.nom.ref\r\n          })\r\n            const q = JSON.stringify({\r\n              query: `mutation{setBuyersOrder(input:${convertToText(doctosave)}) {\r\n                    _id\r\n                      }}`,\r\n            });\r\n\r\n            const response = await fetch(API_HOST, {\r\n              method: \"POST\",\r\n              credentials: \"include\",\r\n              body: q,\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            });\r\n            console.log(response);\r\n            const datar = await response.json();\r\n            console.log(datar);\r\n            if (datar.errors) {\r\n              datar.errors.forEach(err => {\r\n                showError(\"Помилка запису: \" + err.message);\r\n              });\r\n            }\r\n            else { history.goBack(); }\r\n            break\r\n          }\r\n          case \"close\": {\r\n              history.goBack();\r\n              break\r\n          }\r\n          case \"print\": {\r\n            var windowObjectReference = null;\r\n            var winParam = '';// `width=${window.screen.width*8/10},left=${window.screen.width/10}`\r\n            windowObjectReference = window.open(e.itemData.url, \"printwin\",winParam)\r\n            windowObjectReference.focus()\r\n            break\r\n          }\r\n          default:{}\r\n          \r\n        }}}\r\n        dataSource={[\r\n          {\r\n            id: \"ok\",\r\n            text: \"Закрити і зберегти\",\r\n            icon:\"save\"\r\n          },\r\n          { id:\"close\",\r\n            text: \"Закрити\",\r\n            icon:\"close\"\r\n          },\r\n          { \r\n            text: \"Зберегти\", disabled:true\r\n          },\r\n          { text:\"Друк\",\r\n            icon:\"print\",\r\n              items:[\r\n                {\r\n                id:\"print\",\r\n                text:\"Рахунок\",\r\n                url:`https://1cweb.otk.in.ua/otk-base/hs/OTK?doc=buyers_order&ref=${id}&rep=inv`,\r\n                disabled:!data.number_doc,\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір\",\r\n                url:`https://1cweb.otk.in.ua/otk-base/hs/OTK?doc=buyers_order&ref=${id}&rep=dog`,\r\n                disabled:!data.number_doc,\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір сертифікації\",\r\n                url:`https://1cweb.otk.in.ua/otk-base/hs/OTK?doc=buyers_order&ref=${id}&rep=dogs`,\r\n                disabled:true,//!data.number_doc,\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір для Казначейства\",\r\n                url:`https://1cweb.otk.in.ua/otk-base/hs/OTK?doc=buyers_order&ref=${id}&rep=dogk`,\r\n                disabled:!data.number_doc,\r\n              },\r\n        ]\r\n      },  \r\n          // {\r\n          //   text: \"Інше\",\r\n          //   items: [\r\n          //     {\r\n          //       text: \" інше 1\",\r\n          //     },\r\n          //     {\r\n          //       text: \"штше 2\",\r\n          //     },\r\n          //   ],\r\n          // },\r\n        ]}></Menu>\r\n      <div style={{ display: \"flex\" }}>\r\n        <div style={{ display: \"flex\", paddingRight: \"1rem\" }}>\r\n          <TextBox disabled={true} value=\"Номер\"></TextBox>\r\n          <TextBox readOnly={true} value={data.number_doc} placeholder=\"...номер документа...\" hint=\"номер документу присвоєний головним офісом\"/>\r\n        </div>\r\n        <TextBox value=\"Дата\"></TextBox>\r\n        <DateBox\r\n          id=\"date\"\r\n          type=\"datetime\"\r\n          //        min={this.minDate}\r\n          //                max={this.now}\r\n          //defaultValue ={Date.now()}\r\n\r\n          value={\r\n            data.date\r\n            //                        data.date?Date.parse(data.date):Date.now()\r\n          }\r\n          displayFormat={\"dd-MM-yyyy HH:mm:ss\"}\r\n          useMaskBehavior={true}\r\n          onValueChanged={onchangeDate}\r\n          hint=\"дата документу\"\r\n          //                disabledDates={this.getDisabledDates}\r\n        />\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", paddingTop: \"1rem\" }}>\r\n        <TextBox value=\"Контрагент\"></TextBox>\r\n        <PartnerBox value={data.partner?.ref} onChange={(e) => {\r\n              setData((prevState) => ({\r\n                ...prevState,\r\n                partner: {\r\n                  ref: e.ref,\r\n                  name: e.name\r\n//                  name: e.selectedRowsData[0].name,\r\n                },\r\n              }));\r\n            }}/>\r\n      </div> \r\n      <div style={{ display: \"flex\" }}>\r\n          <TextBox value=\"Особа\"></TextBox>\r\n          <TextBox  width= \"80%\" id=\"ClientPerson\" value={data.ClientPerson} placeholder=\"...контактана особа...\" onChange={changeReq}/>\r\n          <div style={{ display: \"flex\", paddingRight: \"1rem\" }}>\r\n          <TextBox value=\"Телефон\"></TextBox>\r\n          <TextBox id=\"ClientPersonPhone\" value={data.ClientPersonPhone} placeholder=\"... номер телефон\" onChange={changeReq}/>\r\n        </div>\r\n        </div> \r\n\r\n      <div style={{ paddingTop: \"1rem\" }}>\r\n        <Toolbar>\r\n          <Item\r\n            location=\"before\"\r\n            locateInMenu=\"auto\"\r\n            widget=\"dxButton\"\r\n            options={addButtonOptions}\r\n          />\r\n\r\n          <Item text=\"Add\" locateInMenu=\"always\" />\r\n        </Toolbar>\r\n        <DataGrid\r\n          noDataText=\"Список порожній\"\r\n          remoteOperations={false}\r\n          rowAlternationEnabled={true}\r\n          showBorders={true}\r\n          allowColumnResizing={true}\r\n          columnResizingMode='widget'\r\n//          dataSource={data.services.slice()}\r\n          dataSource={data.services.map((r)=>{return r})}\r\n         \r\n          hoverStateEnabled={true}\r\n          //activeStateEnabled = {true}\r\n          //selectedRowKeys={this.state.gridBoxValue}\r\n          onValueChanged={(e) => {\r\n            console.log(\"=999=\", e);\r\n          }}\r\n          onSelectionChanged={(e) => {\r\n            console.log(\"=9=\", e);\r\n            setData((prevState) => ({\r\n              ...prevState,\r\n              partner: {\r\n                ref: e.selectedRowsData[0].ref,\r\n                name: e.selectedRowsData[0].name,\r\n              },\r\n            }));\r\n          }}\r\n          selectTextOnEditStart={true}\r\n          onInitNewRow={(e) => {\r\n            var st = data.services.slice();\r\n            console.log(\"New row:\", st);\r\n            st.push({\r\n              row: data.services.length + 1,\r\n              nom: { ref: undefined, name: \"<послуга>\" },\r\n            });\r\n            setData((prevState) => ({\r\n              ...prevState,\r\n              services: st,\r\n            }));\r\n          }}\r\n          onEditorPrepared={(e) => {\r\n            rowData = e.row.data;\r\n            if (e.dataField === \"quantity\") {\r\n              e.editorElement.onchange = onQuantityChanged;\r\n              console.log(e);\r\n            }\r\n          }}\r\n          onRowRemoved={(e) => {\r\n            console.log(\"Row remove\", e); //+++\r\n\r\n            var st = data.services.filter((row) => row.row !== e.data.row);\r\n            var i = 1;\r\n            st.forEach((r) => {\r\n              r.row = i++;\r\n            });\r\n            setData((prevState) => ({\r\n              ...prevState,\r\n              services: st,\r\n            }));\r\n          }}>\r\n          <Editing\r\n            mode=\"cell\"\r\n            allowUpdating={true}\r\n            //allowAdding={true}\r\n            allowDeleting={true}\r\n            useIcons={true}>\r\n            <Texts confirmDeleteMessage=\"Вилучити?\" />\r\n          </Editing>\r\n\r\n          <Column\r\n            dataField=\"nom.ref\"\r\n            caption=\"Номенклатура\"\r\n            calculateDisplayValue={(data) => {\r\n              //                console.log(data) ;\r\n              return data.nom?.name;\r\n            }}\r\n            setCellValue={onchangeNom}\r\n            editCellComponent={cellTemplate}\r\n            \r\n            >\r\n            {/* <Lookup\r\n              dataSource={nomsDataSource}\r\n              valueExpr=\"ref\"\r\n              displayExpr=\"name\"\r\n              minSearchLength={3}\r\n              searchTimeout={500}\r\n              > */}\r\n            \r\n              {/* <DataGrid\r\n            remoteOperations={true}\r\n            dataSource={nomsDataSource}\r\n            //      columns={[\"ref\", \"name\", \"edrpou\"]}\r\n            hoverStateEnabled={true}\r\n            //selectedRowKeys={this.state.gridBoxValue}\r\n            // onSelectionChanged={(e) => {\r\n            //   setData((prevState) => ({\r\n            //     ...prevState,\r\n            //     partner: {\r\n            //       ref: e.selectedRowsData[0].ref,\r\n            //       name: e.selectedRowsData[0].name,\r\n            //     },\r\n            //   }));\r\n            //   //console.log(e);\r\n            // }}\r\n            height=\"90%\">\r\n            \r\n            <Selection mode=\"single\" />\r\n            <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\" /> \r\n            <Paging enabled={true} pageSize={100} />\r\n            <FilterRow visible={true} />\r\n            <Column dataField=\"ref\" visible={false} />\r\n            <Column dataField=\"name\" caption=\"Назва\" />\r\n          </DataGrid> */}\r\n\r\n              {/* </Lookup> */}\r\n          </Column>\r\n          <Column dataField=\"price\" caption=\"Ціна\" allowEditing={false} width={100}\r\n            headerCellRender={ (data) =>{ return  <p \r\n                    //style={{ 'font-size': '16px' }\r\n                    >Ціна<br/>(прайс) </p>;\r\n            }}\r\n          />\r\n          <Column dataField=\"quantity\" caption=\"Кількість\"  width={80}/>\r\n          <Column dataField=\"spec\" caption=\"СпецЦіна\" allowEditing={false} width={100}/>\r\n          <Column dataField=\"discount_percent_automatic\" caption=\"%скидки\" allowEditing={false} width={80} />\r\n           <Column dataField=\"nats\" caption=\"Націнка\" value={100} allowEditing={false} width={80}  /> {/* calculateCellValue={calcNats} */}\r\n          <Column dataField=\"amount\" caption=\"Сума\" allowEditing={false} width={100}/>\r\n          <Column dataField=\"gos_code\" caption=\"Держ.номер\" allowEditing={true}/>\r\n          <Column dataField=\"vin_code\" caption=\"VIN код\" allowEditing={true}/>\r\n        </DataGrid>\r\n      </div>\r\n      <div style={{ display: \"flex\", paddingRight: \"1rem\", width: \"800\" }}>\r\n      <TextBox  width= \"20%\" value=\"Коментар\"></TextBox>\r\n          <TextBox  width= \"80%\"  id=\"note\" value={data.note} placeholder=\"коментар\" onChange={changeReq}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\react\\kolo3\\app-name\\src\\pages\\orders\\orders.jsx",["178","179","180","181"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport \"devextreme/dist/css/dx.common.css\";\r\nimport \"devextreme/dist/css/dx.light.css\";\r\n\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport DataGrid, {\r\n  Selection,\r\n  Paging,\r\n  FilterRow,\r\n  Scrolling,\r\n  Column,\r\n  Lookup,\r\n  Button as CButton,\r\n  StateStoring,\r\n} from \"devextreme-react/data-grid\";\r\nimport { Menu } from \"devextreme-react\";\r\n\r\n// import { useState, useRef } from 'react';\r\n// import { Order } from './order';\r\n// import { Popup } from 'devextreme-react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {convertToText,filterObj} from '../../utils/filtfunc'\r\nimport { API_HOST } from './../../constants';\r\nimport { PartnerBox, partnerDataSource } from \"../../db/ds/dsPartners\";\r\n\r\n\r\nconst handleErrors = (response) => {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst customDataSource = new CustomStore({\r\n  key: \"_id\",\r\n\r\n  update: (dat) => {\r\n    console.log(dat);\r\n  },\r\n  load: (options) => {\r\n    console.log(\"=Options:\" + JSON.stringify(options));\r\n    \r\n    const _jsonFilter = options.filter?\" jfilt:\"+convertToText(filterObj(options.filter)):''\r\n    console.log('_jsonFilter:',_jsonFilter)\r\n\r\n\r\n    \r\n    let _sort = \"\";\r\n    if (options.sort) {\r\n      const __sort = options.sort[0] \r\n      _sort = ` sort:{selector:\"${__sort.selector}\" desc:\"${__sort.desc}\"}`;\r\n    } \r\n \r\n     let _search = ''\r\n    // let _search =\r\n    //   options.searchOperation && options.searchValue\r\n    //     ? ', nameContaine:\"' + options.searchValue + '\"'\r\n    //     : \"\";\r\n\r\n    var _offset = \"\";\r\n    if (options.skip) _offset = ` offset:${options.skip}`;\r\n\r\n    var _limit = 50;\r\n    if (options.take) _limit = options.take;\r\n\r\n    var _qT = ``;\r\n    if (options.requireTotalCount)\r\n      _qT = `totalcount:buyers_orders (limit:1 ${_search} ${_jsonFilter} totalCount:1)  { totalcount} `;\r\n\r\n    var q = `{${_qT} buyers_orders(limit:${_limit} ${_search} ${_sort}  ${_offset} ${_jsonFilter})\r\n                    { \r\n                     _id\r\n                     number_doc\r\n                     date\r\n                     doc_amount\r\n                     paid\r\n                     shipped\r\n                     note\r\n                     partner { \r\n                         _id ref name \r\n                        } \r\n\r\n                    }\r\n                 }`\r\n  console.log ('=q=:',q)                 \r\n   return fetch(API_HOST, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n     // credentials: 'same-origin', mode:\"no-cors\",\r\n      body: JSON.stringify({\r\n        query: q,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n //                   mode:\"no-cors\" ,\r\n    })\r\n      .then(handleErrors)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        //               console.log(data.data)\r\n        if (data.errors) {\r\n          return { errors: data.errors[0] };\r\n        }\r\n\r\n        return {\r\n          data: data.data.buyers_orders,\r\n          totalCount: options.requireTotalCount\r\n              ? data.data.totalcount[0].totalcount\r\n              : undefined,\r\n          //summary: response.summary,\r\n          //groupCount: response.groupCount\r\n        };\r\n        // return ()\r\n      });\r\n    //.catch(() => { console.log( 'Network error' )});\r\n  },\r\n  // insert: (data) => {\r\n  //   createObject({\r\n  //     variables: { product: { ...data, oid: uuidv4() } },\r\n  //   }).then((xx) => refetch());\r\n  // },\r\n  // update: (key, values) => {\r\n  //   updateObject({\r\n  //     variables: {\r\n  //       product: { ...values },\r\n  //       oid: key,\r\n  //     },\r\n  //   });\r\n  // },\r\n  // remove: (key) => {\r\n  //   deleteObject({\r\n  //     variables: {\r\n  //       oid: key,\r\n  //     },\r\n  //   }).then((xx) => refetch());\r\n  // },\r\n});\r\n\r\nconst lookupDataSource = new CustomStore({\r\n  key: \"ref\",\r\n  byKey: function (key) {\r\n    //    console.log(\"2:\",this.);\r\n    var res = this.load({ lookUp: key });\r\n    return res.then((dat) => {\r\n      var ob = dat.data?.find((elem) => elem.ref === key);\r\n      return ob;\r\n    });\r\n  },\r\n  paginate: true,\r\n  pageSize: 10,\r\n  //        onModifying:(dat)=>{console.log(\"2:\",dat)},\r\n  load: async (options) => {\r\n    console.log(options);\r\n    if (options.filter) return { data: [] };\r\n    let search = \"\";\r\n    if (options.searchOperation && options.searchValue)\r\n      search = ', nameContaine:\"' + options.searchValue + '\"';\r\n\r\n    let lookUp = \"\";\r\n    if (options.lookUp) lookUp = ', lookup:\"' + options.lookUp + '\"';\r\n\r\n    //       console.log(options)\r\n    const q = `{partners (limit:50 ${lookUp} ${search})\r\n                    { \r\n                     ref \r\n                     name\r\n                    } \r\n                 }`;\r\n\r\n    //       console.log(q)\r\n    return fetch(API_HOST, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ query: q }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then(handleErrors)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        //                console.log(data.data.partners)\r\n\r\n        return {\r\n          data: data.data.partners,\r\n          //                   totalCount: data.data.partners.length,\r\n        };\r\n      });\r\n  },\r\n});\r\n\r\nconst Orders = () => {\r\n  const { user, signOut } = useAuth();\r\n  //    const [errorLoading, setDialogOpen] = useState(false);\r\n  const history = useHistory();\r\n  const [currRow,setCurrRow] = useState({ref:''})\r\n\r\nuseEffect(() => {\r\n  //etCurrRow()\r\n  return () => {\r\n    \r\n  };\r\n}, [])\r\n\r\n  customDataSource.on(\"loaded\", function (result) {\r\n    if (result.errors) {\r\n      console.log(\"loaded Some error:\", result.errors);\r\n      signOut();\r\n    }\r\n  });\r\n\r\n  const setRow=(e)=>{\r\n    var r\r\n    if (e.row) r=e.row.data\r\n\r\n    if (e.data) r=e.data\r\n    \r\n    if (r){\r\n      r.ref = r._id.split('|')[1]\r\n      setCurrRow(r)\r\n    }  \r\n\r\n    }\r\n  // const classes = useStyles();\r\n\r\n  const editIconClick = (e) => {\r\n    console.log(\"Edit:\", e);\r\n    history.push(\"/order/\" + e.row.key.split(\"|\")[1]);\r\n  };\r\n\r\n  //     const sayHelloWorld = ()=> {\r\n  //         //setDialogOpen(!dialogOpen)\r\n  //         history.push('/order/72eae9aa-e11c-11ea-811a-00155da29310');\r\n  // //        alert('Hello world!')\r\n  //     }\r\n  //customDataSource.on('')\r\n  return (\r\n    <div height=\"5rem\">\r\n      {/* <Popup\r\n          visible={dialogOpen}\r\n          onHiding={()=>{setDialogOpen(!dialogOpen)}}\r\n          dragEnabled={false}\r\n          closeOnOutsideClick={true}\r\n          showTitle={true}\r\n          title=\"Замовлення\"\r\n          //width={600}\r\n          width=\"80%\"\r\n          //height={250}\r\n        >\r\n                <Order/>\r\n                </Popup>\r\n          <Button\r\n                text=\"Click me\"\r\n                onClick={sayHelloWorld}\r\n            /> */}\r\n    <Menu\r\n    onItemClick={(e) => {\r\n      console.log('menu item:',e);\r\n      switch(e.itemData.id){\r\n      case \"new\": { history.push(\"/order/new\");\r\n                    break\r\n                  }\r\n      case \"print\": {\r\n            var windowObjectReference = null;\r\n            var winParam = '';// `width=${window.screen.width*8/10},left=${window.screen.width/10}`\r\n            windowObjectReference = window.open(e.itemData.url, \"printwin\",winParam)\r\n            windowObjectReference.focus()\r\n            break\r\n          }\r\n          default:{}\r\n        }\r\n    }}\r\n    dataSource={[\r\n      {\r\n        text: \"Додати\",\r\n        id:\"new\"\r\n      },\r\n      {\r\n        text: \"Закрити\",\r\n      },\r\n      { text:\"Друк\",\r\n            icon:\"print\",\r\n              items:[\r\n                {\r\n                id:\"print\",\r\n                text:\"Рахунок\",\r\n                url:`https://1cweb.otk.in.ua/otk-base/hs/OTK?doc=buyers_order&ref=${currRow.ref}&rep=inv`,\r\n     //           disabled:!data.number_doc,\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір\",\r\n       //         url:`https://1cweb.otk.in.ua/otk-base/hs/OTK?doc=buyers_order&ref=${id}&rep=dog`,\r\n       //         disabled:!data.number_doc,\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір сертифікації\",\r\n       //         url:`https://1cweb.otk.in.ua/otk-base/hs/OTK?doc=buyers_order&ref=${id}&rep=dogs`,\r\n                disabled:true,//!data.number_doc,\r\n              },\r\n              {\r\n                id:\"print\",\r\n                text:\"Договір для Казначейства\",\r\n         //       url:`https://1cweb.otk.in.ua/otk-base/hs/OTK?doc=buyers_order&ref=${id}&rep=dogk`,\r\n         //       disabled:!data.number_doc,\r\n              },\r\n        ]\r\n      },  \r\n    ]}></Menu>\r\n\r\n      <DataGrid\r\n        id=\"gridContainer\"\r\n        dataSource={customDataSource}\r\n        allowColumnReordering={true}\r\n        allowColumnResizing={true}\r\n        showBorders={true}\r\n        allowSorting={true}\r\n        remoteOperations={true}\r\n        height={800}\r\n  //      focusedRowEnabled = {true}\r\n\r\n        onRowClick = {setRow}\r\n       // onFocusedRowChanged={setRow}\r\n        //   onEditingStart={this.onEditingStart}\r\n        //   onInitNewRow={this.onInitNewRow}\r\n        //   onRowInserting={this.onRowInserting}\r\n        //   onRowInserted={this.onRowInserted}\r\n        //   onRowUpdating={this.onRowUpdating}\r\n        //   onRowUpdated={this.onRowUpdated}\r\n        //   onRowRemoving={this.onRowRemoving}\r\n        //   onRowRemoved={this.onRowRemoved}\r\n        //   onSaving={this.onSaving}\r\n        //   onSaved={this.onSaved}\r\n        //   onEditCanceling={this.onEditCanceling}\r\n        //   onEditCanceled={this.onEditCanceled}\r\n      >\r\n            <StateStoring enabled={true} type=\"localStorage\" storageKey=\"orders\" />\r\n            <Selection mode=\"single\" />\r\n            <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\"  />\r\n            <Paging  pageSize={100} />\r\n            <FilterRow visible={true}  />\r\n        {/* <Editing\r\n            mode=\"batch\" \r\n            allowUpdating={true}\r\n            selectTextOnEditStart={true}\r\n  //          startEditAction={this.state.startEditAction} \r\n\r\n            /> */}\r\n        <Column type=\"buttons\" width={40}>\r\n          <CButton name=\"_edit\" icon=\"edit\" onClick={editIconClick} />\r\n        </Column>\r\n\r\n        <Column width={140}\r\n          dataField=\"number_doc\"\r\n       \r\n          caption=\"Номер\"\r\n          dataType=\"string\"\r\n          //format=\"currency\"\r\n          alignment=\"left\"\r\n          //          allowEditing={true}\r\n        />\r\n        <Column width={120}\r\n          dataField=\"date\"\r\n          caption=\"Дата\"\r\n          dataType=\"date\"\r\n          //format=\"currency\"\r\n          alignment=\"left\"\r\n        />\r\n        <Column width={400}\r\n        allowSorting={false}\r\n          dataField=\"partner.ref\"\r\n          caption=\"Контрагент\"\r\n          dataType=\"string\"\r\n          //format=\"currency\"\r\n          alignment=\"left\"\r\n          \r\n          onEditorPreparing  = {(e)=>{\r\n          console.log(e)\r\n        }}\r\n\r\n          calculateDisplayValue={(data) => {\r\n            //                console.log(data) ;\r\n            return data.partner?.name;\r\n          }}>\r\n  \r\n          <Lookup \r\n//            dataSource={lookupDataSource}\r\n            dataSource={partnerDataSource} allowClearing={true} \r\n\r\n            valueExpr=\"ref\"\r\n            displayExpr=\"name\"\r\n            minSearchLength={3}\r\n      \r\n            searchTimeout={500}>\r\n         \r\n            </Lookup>\r\n        </Column>\r\n\r\n        <Column width={100}\r\n          allowSorting={false}\r\n          dataField=\"doc_amount\"\r\n          caption=\"Сума\"\r\n          dataType=\"number\"\r\n          //format=\"currency\"\r\n          alignment=\"right\"\r\n        />\r\n        <Column width={100}\r\n          allowSorting={false}\r\n          dataField=\"shipped\"\r\n          caption=\"Відвантажено\"\r\n          dataType=\"number\"\r\n          //format=\"currency\"\r\n          alignment=\"right\"\r\n        />\r\n        <Column width={100}\r\n          allowSorting={false}\r\n          dataField=\"paid\"\r\n          caption=\"Сплачено\"\r\n          dataType=\"number\"\r\n          //format=\"currency\"\r\n          alignment=\"right\"\r\n        />\r\n        <Column \r\n          allowSorting={false}\r\n          dataField=\"note\"\r\n          caption=\"Коментар\"\r\n          dataType=\"number\"\r\n          //format=\"currency\"\r\n          alignment=\"left\"\r\n        />\r\n      </DataGrid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","C:\\react\\kolo3\\app-name\\src\\utils\\filtfunc.js",[],"C:\\react\\kolo3\\app-name\\src\\constants.jsx",[],"C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsNoms.jsx",[],"C:\\react\\kolo3\\app-name\\src\\db\\ds\\dsPartners.jsx",["182","183","184"],"import CustomStore from \"devextreme/data/custom_store\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { DropDownBox } from \"devextreme-react/drop-down-box\";\r\nimport { catLoad } from './../../utils/filtfunc';\r\nimport { DataGrid, DropDownBoxButton, Menu, Popup } from \"devextreme-react\";\r\nimport { Partner } from './../../pages/partner';\r\nimport { Column, FilterRow, Paging, Scrolling, Selection, StateStoring } from \"devextreme-react/data-grid\";\r\nimport { v4 as uuid_v4 } from \"uuid\";\r\n\r\nimport { API_HOST } from './../../constants';\r\nconst cls_name = 'partners'\r\nconst cls_fields = 'ref name edrpou id parent is_buyer is_supplier legal_address note name_full individual_legal inn'\r\n\r\nexport const partnerDataSource = new CustomStore({\r\n  key: \"ref\",\r\n\r\n\r\n  byKey: (ref) => {\r\n    if (!ref) return { ref: ref, name: \"\" };\r\n    console.log(\"=2:\", ref);\r\n    const q = `{${cls_name} (ref:\"${ref}\" ) {${cls_fields} } }`;\r\n\r\n    return (\r\n      fetch(API_HOST, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        body: JSON.stringify({ query: q }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Accept\": \"application/json\"\r\n        },\r\n      })\r\n        //        .then(handleErrors)\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          const res =\r\n            response.data[cls_name].length === 0\r\n              ? { ref: ref, name: \"\" }\r\n              : response.data[cls_name][0];\r\n          console.log(\"=res:\", res);\r\n          return res;\r\n        })\r\n    );\r\n  },\r\n\r\n  load: (options) => {\r\n    return catLoad(options,cls_name,cls_fields);\r\n    \r\n  },\r\n  insert: (val) => {\r\n    console.log(\"4:\");\r\n    return new Promise((resolve, reject) => {\r\n      resolve([{ text: \"Test insert\" }]);\r\n    });\r\n  },\r\n  remove: (key) => {\r\n    console.log(\"5:\");\r\n    return new Promise((resolve, reject) => {\r\n      resolve();\r\n    });\r\n  },\r\n  update: (dat, values) => {\r\n    console.log(\"6:\");\r\n    return new Promise((resolve, reject) => {\r\n      resolve([{ text: \"Test insert\" }]);\r\n    });\r\n  },\r\n});\r\n\r\npartnerDataSource.byEdrpou = async (edrpou)=>{\r\n    const options={filter:[\"edrpou\",\"=\",edrpou]}\r\n    const res = await catLoad(options,cls_name,cls_fields);\r\n    if (res.data &&res.data.length>0)\r\n      return res.data[0]\r\n    else return undefined  \r\n}\r\n\r\nexport const PartnerBox = (props)=>{\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n//  const [id, setId] = useState();\r\n  const currentRowData = useRef();\r\n//  console.log('currentRowData',currentRowData.current,'\\nid:',id,'value',props.value)\r\n  const ddbox = useRef()  \r\n  const dgrid = useRef()\r\n\r\n const currentRowData_byKeyAsync = async (key)=>{\r\n   var newObj = await partnerDataSource.byKey(key)\r\n   if (!newObj) newObj = {ref:key}\r\n    currentRowData.current = newObj\r\n }\r\n  useEffect( () => {\r\n    \r\n    if (!currentRowData.current) currentRowData.current = {ref:props.value}\r\n    currentRowData_byKeyAsync(props.value)\r\n    \r\n  //  setId(prev => props.value)\r\n    return () => {};\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props.value]);\r\n\r\n  const viewButton = {\r\n  icon: 'search',\r\n  type: 'normal',//'default',\r\n  onClick: async () => {\r\n   // setId(id)\r\n    if (!currentRowData.current) {currentRowData.current = await partnerDataSource.byKey(props.value)}\r\n   \r\n    setDialogOpen(true)\r\n    ddbox.current.instance.open()\r\n  }\r\n};\r\n\r\n  const selectHandler = (rowData)=>{\r\n    if (props.onChange) props.onChange(rowData)\r\n    ddbox.current.instance.close()\r\n  }\r\n\r\n  const clickMenu = useCallback(\r\n    (e) => {\r\n        if (e.itemData.id === 'open') {\r\n          setDialogOpen(true)\r\n          }\r\n        if (e.itemData.id === 'select'){\r\n          selectHandler(currentRowData.current)\r\n          }\r\n        if(e.itemData.id === 'new')  {\r\n         \r\n          currentRowData.current = {ref:uuid_v4()}\r\n          setDialogOpen(true)\r\n        }\r\n        if (e.itemData.id ==='close')\r\n        {ddbox.current.instance.close()}  \r\n        console.log(e);\r\n      },\r\n    [],\r\n  )\r\n\r\n  return (\r\n    <DropDownBox \r\n    ref = {ddbox}\r\n    width=\"100%\"\r\n    value={props.value}\r\n    valueExpr=\"ref\"\r\n    deferRendering={false}\r\n    displayExpr=\"name\"\r\n    placeholder=\"контрагент ...\"\r\n    showClearButton={false}\r\n    dataSource={partnerDataSource}\r\n    buttons={[ 'dropDown',{name:\"search\", location:\"after\",options:viewButton}]}\r\n  >\r\n   \r\n\r\n   <Menu\r\n      onItemClick={clickMenu}\r\n      dataSource={[\r\n        {\r\n          text: \"Вибрати\",\r\n          id:\"select\",\r\n          visible: props.onChange !== undefined\r\n        },\r\n        {\r\n          text: \"Відкрити\",\r\n          id:\"open\"\r\n        },\r\n        {\r\n          text: \"Додати\",\r\n          id:\"new\"\r\n        },\r\n        {\r\n          text: \"Закрити\",\r\n          id:\"close\"\r\n        },\r\n        // {\r\n        //   text: \"Інше\",\r\n        //   items: [\r\n        //     {\r\n        //       text: \" інше 1\",\r\n        //     },\r\n        //     {\r\n        //       text: \"штше 2\",\r\n        //     },\r\n        //   ],\r\n        // },\r\n      ]}></Menu>\r\n     \r\n     <Popup\r\n        visible={dialogOpen}\r\n       \r\n        onHiding={()=>{setDialogOpen(false)}}\r\n        dragEnabled={true}\r\n        closeOnOutsideClick={true}\r\n        showTitle={true}\r\n        title=\"-Контрагент-\"\r\n        width=\"75%\"\r\n        >\r\n        <Partner _id={currentRowData.current?currentRowData.current:props.value}/>\r\n      </Popup>      \r\n     \r\n\r\n    <DataGrid\r\n    ref = {dgrid}\r\n      remoteOperations={true}\r\n      dataSource={partnerDataSource}\r\n      onFocusedRowChanged={(e)=>{\r\n                if (e.row) currentRowData.current = e.row.data\r\n                else currentRowData.current = {name:'',ref:''}\r\n     //   console.log(e)\r\n      }}\r\n      hoverStateEnabled={true}\r\n //     focusedRowEnabled = {true}\r\n      focusedRowKey = {props.value}\r\n      \r\n      onRowDblClick={(e)=>{\r\n        selectHandler(e.data)\r\n      }}\r\n      onSelectionChanged={(e) => {\r\n        if(e.selectedRowsData.length){\r\n          currentRowData.current = e.selectedRowsData[0]\r\n //         setId(e.selectedRowsData[0].ref)\r\n     }\r\n        \r\n      }}\r\n      height=\"90%\">\r\n      \r\n      {/* <StateStoring enabled={true} type=\"localStorage\" storageKey=\"storageP\" /> */}\r\n            <Selection mode=\"single\" />\r\n      <Scrolling mode=\"virtual\" rowRenderingMode=\"virtual\" />\r\n      <Paging enabled={true} pageSize={100} />\r\n      <FilterRow visible={true} />\r\n      <Column dataField=\"ref\" visible={false} />\r\n      <Column dataField=\"name\" caption=\"Назва\" />\r\n      <Column dataField=\"edrpou\" caption=\"код ЄДРПОУ\" />\r\n    </DataGrid>\r\n  </DropDownBox>\r\n  )\r\n}\r\n","C:\\react\\kolo3\\app-name\\src\\pages\\partner.js",["185","186","187","188","189","190","191","192","193","194","195","196","197"],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":85,"column":9,"nodeType":"208","messageId":"209","endLine":89,"endColumn":4},{"ruleId":"202","severity":1,"message":"210","line":14,"column":10,"nodeType":"204","messageId":"205","endLine":14,"endColumn":25},{"ruleId":"202","severity":1,"message":"211","line":14,"column":27,"nodeType":"204","messageId":"205","endLine":14,"endColumn":30},{"ruleId":"202","severity":1,"message":"212","line":4,"column":34,"nodeType":"204","messageId":"205","endLine":4,"endColumn":39},{"ruleId":"202","severity":1,"message":"213","line":19,"column":3,"nodeType":"204","messageId":"205","endLine":19,"endColumn":9},{"ruleId":"202","severity":1,"message":"214","line":24,"column":10,"nodeType":"204","messageId":"205","endLine":24,"endColumn":27},{"ruleId":"202","severity":1,"message":"215","line":29,"column":10,"nodeType":"204","messageId":"205","endLine":29,"endColumn":28},{"ruleId":"202","severity":1,"message":"216","line":31,"column":10,"nodeType":"204","messageId":"205","endLine":31,"endColumn":17},{"ruleId":"202","severity":1,"message":"217","line":57,"column":10,"nodeType":"204","messageId":"205","endLine":57,"endColumn":20},{"ruleId":"202","severity":1,"message":"218","line":57,"column":22,"nodeType":"204","messageId":"205","endLine":57,"endColumn":35},{"ruleId":"202","severity":1,"message":"219","line":162,"column":9,"nodeType":"204","messageId":"205","endLine":162,"endColumn":23},{"ruleId":"202","severity":1,"message":"220","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":34},{"ruleId":"202","severity":1,"message":"221","line":26,"column":10,"nodeType":"204","messageId":"205","endLine":26,"endColumn":20},{"ruleId":"202","severity":1,"message":"222","line":149,"column":7,"nodeType":"204","messageId":"205","endLine":149,"endColumn":23},{"ruleId":"202","severity":1,"message":"223","line":204,"column":11,"nodeType":"204","messageId":"205","endLine":204,"endColumn":15},{"ruleId":"202","severity":1,"message":"224","line":6,"column":20,"nodeType":"204","messageId":"205","endLine":6,"endColumn":37},{"ruleId":"202","severity":1,"message":"225","line":8,"column":59,"nodeType":"204","messageId":"205","endLine":8,"endColumn":71},{"ruleId":"226","severity":1,"message":"227","line":136,"column":5,"nodeType":"228","endLine":136,"endColumn":7,"suggestions":"229"},{"ruleId":"202","severity":1,"message":"230","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"202","severity":1,"message":"212","line":2,"column":30,"nodeType":"204","messageId":"205","endLine":2,"endColumn":35},{"ruleId":"202","severity":1,"message":"231","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":17},{"ruleId":"202","severity":1,"message":"232","line":11,"column":3,"nodeType":"204","messageId":"205","endLine":11,"endColumn":7},{"ruleId":"202","severity":1,"message":"233","line":16,"column":3,"nodeType":"204","messageId":"205","endLine":16,"endColumn":12},{"ruleId":"202","severity":1,"message":"234","line":17,"column":3,"nodeType":"204","messageId":"205","endLine":17,"endColumn":15},{"ruleId":"202","severity":1,"message":"235","line":18,"column":3,"nodeType":"204","messageId":"205","endLine":18,"endColumn":14},{"ruleId":"202","severity":1,"message":"236","line":19,"column":3,"nodeType":"204","messageId":"205","endLine":19,"endColumn":12},{"ruleId":"202","severity":1,"message":"237","line":20,"column":3,"nodeType":"204","messageId":"205","endLine":20,"endColumn":14},{"ruleId":"202","severity":1,"message":"238","line":21,"column":3,"nodeType":"204","messageId":"205","endLine":21,"endColumn":19},{"ruleId":"202","severity":1,"message":"239","line":22,"column":3,"nodeType":"204","messageId":"205","endLine":22,"endColumn":12},{"ruleId":"202","severity":1,"message":"240","line":24,"column":3,"nodeType":"204","messageId":"205","endLine":24,"endColumn":13},{"ruleId":"202","severity":1,"message":"241","line":36,"column":9,"nodeType":"204","messageId":"205","endLine":36,"endColumn":11},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'defaultUser' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","'useSubscription' is defined but never used.","'gql' is defined but never used.","'Popup' is defined but never used.","'Lookup' is defined but never used.","'partnerDataSource' is defined but never used.","'ChartTitleSubtitle' is defined but never used.","'Partner' is defined but never used.","'dialogOpen' is assigned a value but never used.","'setDialogOpen' is assigned a value but never used.","'onValueChanged' is assigned a value but never used.","'useRef' is defined but never used.","'PartnerBox' is defined but never used.","'lookupDataSource' is assigned a value but never used.","'user' is assigned a value but never used.","'DropDownBoxButton' is defined but never used.","'StateStoring' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'selectHandler'. Either include it or remove the dependency array.","ArrayExpression",["244"],"'Button' is defined but never used.","'useAuth' is defined but never used.","'Item' is defined but never used.","'Validator' is defined but never used.","'RequiredRule' is defined but never used.","'CompareRule' is defined but never used.","'EmailRule' is defined but never used.","'PatternRule' is defined but never used.","'StringLengthRule' is defined but never used.","'RangeRule' is defined but never used.","'CustomRule' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},"Update the dependencies array to be: [selectHandler]",{"range":"247","text":"248"},[4091,4093],"[selectHandler]"]